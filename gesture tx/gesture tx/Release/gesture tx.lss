
gesture tx.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000054a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000054a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000057c  2**2
                  CONTENTS, READONLY
  4 .debug_info   000005f4  00000000  00000000  000005bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005a2  00000000  00000000  00000bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000133  00000000  00000000  00001152  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000208  00000000  00000000  00001285  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 c1 01 	call	0x382	; 0x382 <main>
  78:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <Enable>:
  80:	5a 9a       	sbi	0x0b, 2	; 11
  82:	00 00       	nop
  84:	00 00       	nop
  86:	00 00       	nop
  88:	5a 98       	cbi	0x0b, 2	; 11
  8a:	08 95       	ret

0000008c <BusyFlag>:
  8c:	cf 93       	push	r28
  8e:	8a b1       	in	r24, 0x0a	; 10
  90:	87 78       	andi	r24, 0x87	; 135
  92:	8a b9       	out	0x0a, r24	; 10
  94:	59 9a       	sbi	0x0b, 1	; 11
  96:	8b b1       	in	r24, 0x0b	; 11
  98:	86 78       	andi	r24, 0x86	; 134
  9a:	8b b9       	out	0x0b, r24	; 11
  9c:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
  a0:	c9 b1       	in	r28, 0x09	; 9
  a2:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
  a6:	c6 fd       	sbrc	r28, 6
  a8:	f9 cf       	rjmp	.-14     	; 0x9c <BusyFlag+0x10>
  aa:	59 98       	cbi	0x0b, 1	; 11
  ac:	8a b1       	in	r24, 0x0a	; 10
  ae:	88 67       	ori	r24, 0x78	; 120
  b0:	8a b9       	out	0x0a, r24	; 10
  b2:	cf 91       	pop	r28
  b4:	08 95       	ret

000000b6 <LCD_Command>:
  b6:	cf 93       	push	r28
  b8:	c8 2f       	mov	r28, r24
  ba:	8b b1       	in	r24, 0x0b	; 11
  bc:	87 78       	andi	r24, 0x87	; 135
  be:	8b b9       	out	0x0b, r24	; 11
  c0:	9b b1       	in	r25, 0x0b	; 11
  c2:	8c 2f       	mov	r24, r28
  c4:	80 7f       	andi	r24, 0xF0	; 240
  c6:	86 95       	lsr	r24
  c8:	89 2b       	or	r24, r25
  ca:	8b b9       	out	0x0b, r24	; 11
  cc:	58 98       	cbi	0x0b, 0	; 11
  ce:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
  d2:	8b b1       	in	r24, 0x0b	; 11
  d4:	87 78       	andi	r24, 0x87	; 135
  d6:	8b b9       	out	0x0b, r24	; 11
  d8:	2b b1       	in	r18, 0x0b	; 11
  da:	cf 70       	andi	r28, 0x0F	; 15
  dc:	38 e0       	ldi	r19, 0x08	; 8
  de:	c3 9f       	mul	r28, r19
  e0:	c0 01       	movw	r24, r0
  e2:	11 24       	eor	r1, r1
  e4:	82 2b       	or	r24, r18
  e6:	8b b9       	out	0x0b, r24	; 11
  e8:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
  ec:	cf 91       	pop	r28
  ee:	0c 94 46 00 	jmp	0x8c	; 0x8c <BusyFlag>

000000f2 <LCD_Ascii>:
  f2:	cf 93       	push	r28
  f4:	c8 2f       	mov	r28, r24
  f6:	8b b1       	in	r24, 0x0b	; 11
  f8:	87 78       	andi	r24, 0x87	; 135
  fa:	8b b9       	out	0x0b, r24	; 11
  fc:	8b b1       	in	r24, 0x0b	; 11
  fe:	9c 2f       	mov	r25, r28
 100:	90 7f       	andi	r25, 0xF0	; 240
 102:	96 95       	lsr	r25
 104:	81 60       	ori	r24, 0x01	; 1
 106:	89 2b       	or	r24, r25
 108:	8b b9       	out	0x0b, r24	; 11
 10a:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
 10e:	8b b1       	in	r24, 0x0b	; 11
 110:	87 78       	andi	r24, 0x87	; 135
 112:	8b b9       	out	0x0b, r24	; 11
 114:	2b b1       	in	r18, 0x0b	; 11
 116:	cf 70       	andi	r28, 0x0F	; 15
 118:	38 e0       	ldi	r19, 0x08	; 8
 11a:	c3 9f       	mul	r28, r19
 11c:	c0 01       	movw	r24, r0
 11e:	11 24       	eor	r1, r1
 120:	82 2b       	or	r24, r18
 122:	8b b9       	out	0x0b, r24	; 11
 124:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
 128:	cf 91       	pop	r28
 12a:	0c 94 46 00 	jmp	0x8c	; 0x8c <BusyFlag>

0000012e <LCD_Cursor>:
 12e:	81 11       	cpse	r24, r1
 130:	02 c0       	rjmp	.+4      	; 0x136 <LCD_Cursor+0x8>
 132:	80 e8       	ldi	r24, 0x80	; 128
 134:	01 c0       	rjmp	.+2      	; 0x138 <LCD_Cursor+0xa>
 136:	80 ec       	ldi	r24, 0xC0	; 192
 138:	86 0f       	add	r24, r22
 13a:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <LCD_Command>

0000013e <LCD_String>:
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
 142:	ec 01       	movw	r28, r24
 144:	89 91       	ld	r24, Y+
 146:	0e 94 79 00 	call	0xf2	; 0xf2 <LCD_Ascii>
 14a:	88 81       	ld	r24, Y
 14c:	81 11       	cpse	r24, r1
 14e:	fa cf       	rjmp	.-12     	; 0x144 <LCD_String+0x6>
 150:	df 91       	pop	r29
 152:	cf 91       	pop	r28
 154:	08 95       	ret

00000156 <LCD_Integer2String>:
 156:	ef 92       	push	r14
 158:	ff 92       	push	r15
 15a:	0f 93       	push	r16
 15c:	1f 93       	push	r17
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	00 d0       	rcall	.+0      	; 0x164 <LCD_Integer2String+0xe>
 164:	00 d0       	rcall	.+0      	; 0x166 <LCD_Integer2String+0x10>
 166:	00 d0       	rcall	.+0      	; 0x168 <LCD_Integer2String+0x12>
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
 16c:	8c 01       	movw	r16, r24
 16e:	f6 2e       	mov	r15, r22
 170:	84 2f       	mov	r24, r20
 172:	62 2f       	mov	r22, r18
 174:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_Cursor>
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	2f 0d       	add	r18, r15
 17c:	e1 e0       	ldi	r30, 0x01	; 1
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	ec 0f       	add	r30, r28
 182:	fd 1f       	adc	r31, r29
 184:	ef 0d       	add	r30, r15
 186:	f1 1d       	adc	r31, r1
 188:	10 82       	st	Z, r1
 18a:	8a e0       	ldi	r24, 0x0A	; 10
 18c:	e8 2e       	mov	r14, r24
 18e:	f1 2c       	mov	r15, r1
 190:	e1 e0       	ldi	r30, 0x01	; 1
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	ec 0f       	add	r30, r28
 196:	fd 1f       	adc	r31, r29
 198:	e2 0f       	add	r30, r18
 19a:	f1 1d       	adc	r31, r1
 19c:	c8 01       	movw	r24, r16
 19e:	b7 01       	movw	r22, r14
 1a0:	0e 94 65 02 	call	0x4ca	; 0x4ca <__udivmodhi4>
 1a4:	80 5d       	subi	r24, 0xD0	; 208
 1a6:	80 83       	st	Z, r24
 1a8:	8b 01       	movw	r16, r22
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	88 f7       	brcc	.-30     	; 0x190 <LCD_Integer2String+0x3a>
 1ae:	ce 01       	movw	r24, r28
 1b0:	01 96       	adiw	r24, 0x01	; 1
 1b2:	0e 94 9f 00 	call	0x13e	; 0x13e <LCD_String>
 1b6:	26 96       	adiw	r28, 0x06	; 6
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	de bf       	out	0x3e, r29	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	cd bf       	out	0x3d, r28	; 61
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	ff 90       	pop	r15
 1cc:	ef 90       	pop	r14
 1ce:	08 95       	ret

000001d0 <SPI_Initialize>:
 1d0:	84 b1       	in	r24, 0x04	; 4
 1d2:	8c 62       	ori	r24, 0x2C	; 44
 1d4:	84 b9       	out	0x04, r24	; 4
 1d6:	80 e5       	ldi	r24, 0x50	; 80
 1d8:	8c bd       	out	0x2c, r24	; 44
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	8d bd       	out	0x2d, r24	; 45
 1de:	2a 9a       	sbi	0x05, 2	; 5
 1e0:	08 95       	ret

000001e2 <SPI_Transciever>:
 1e2:	8e bd       	out	0x2e, r24	; 46
 1e4:	0d b4       	in	r0, 0x2d	; 45
 1e6:	07 fe       	sbrs	r0, 7
 1e8:	fd cf       	rjmp	.-6      	; 0x1e4 <SPI_Transciever+0x2>
 1ea:	8e b5       	in	r24, 0x2e	; 46
 1ec:	08 95       	ret

000001ee <SPI_CsClear>:
 1ee:	2a 98       	cbi	0x05, 2	; 5
 1f0:	08 95       	ret

000001f2 <SPI_CsSet>:
 1f2:	2a 9a       	sbi	0x05, 2	; 5
 1f4:	08 95       	ret

000001f6 <NRF24_WriteByte>:
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	d8 2f       	mov	r29, r24
 1fc:	c6 2f       	mov	r28, r22
 1fe:	0e 94 f7 00 	call	0x1ee	; 0x1ee <SPI_CsClear>
 202:	8d 2f       	mov	r24, r29
 204:	80 62       	ori	r24, 0x20	; 32
 206:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <SPI_Transciever>
 20a:	8c 2f       	mov	r24, r28
 20c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <SPI_Transciever>
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <SPI_CsSet>

00000218 <NRF24_WriteTxFifo>:
 218:	ff 92       	push	r15
 21a:	0f 93       	push	r16
 21c:	1f 93       	push	r17
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	f8 2e       	mov	r15, r24
 224:	09 2f       	mov	r16, r25
 226:	16 2f       	mov	r17, r22
 228:	0e 94 f7 00 	call	0x1ee	; 0x1ee <SPI_CsClear>
 22c:	80 ea       	ldi	r24, 0xA0	; 160
 22e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <SPI_Transciever>
 232:	cf 2d       	mov	r28, r15
 234:	d0 2f       	mov	r29, r16
 236:	89 91       	ld	r24, Y+
 238:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <SPI_Transciever>
 23c:	11 50       	subi	r17, 0x01	; 1
 23e:	d9 f7       	brne	.-10     	; 0x236 <NRF24_WriteTxFifo+0x1e>
 240:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <SPI_CsSet>
 244:	0e 94 f7 00 	call	0x1ee	; 0x1ee <SPI_CsClear>
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <SPI_Transciever>
 24e:	c8 2f       	mov	r28, r24
 250:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <SPI_CsSet>
 254:	c5 ff       	sbrs	r28, 5
 256:	f6 cf       	rjmp	.-20     	; 0x244 <NRF24_WriteTxFifo+0x2c>
 258:	6c 2f       	mov	r22, r28
 25a:	87 e0       	ldi	r24, 0x07	; 7
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	1f 91       	pop	r17
 262:	0f 91       	pop	r16
 264:	ff 90       	pop	r15
 266:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <NRF24_WriteByte>

0000026a <I2C_Start>:
 26a:	84 ea       	ldi	r24, 0xA4	; 164
 26c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 270:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 274:	87 ff       	sbrs	r24, 7
 276:	fc cf       	rjmp	.-8      	; 0x270 <I2C_Start+0x6>
 278:	08 95       	ret

0000027a <I2C_ReadAsk>:
 27a:	84 ec       	ldi	r24, 0xC4	; 196
 27c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 280:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 284:	87 ff       	sbrs	r24, 7
 286:	fc cf       	rjmp	.-8      	; 0x280 <I2C_ReadAsk+0x6>
 288:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 28c:	08 95       	ret

0000028e <I2C_ReadNoAsk>:
 28e:	84 e8       	ldi	r24, 0x84	; 132
 290:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 294:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 298:	87 ff       	sbrs	r24, 7
 29a:	fc cf       	rjmp	.-8      	; 0x294 <I2C_ReadNoAsk+0x6>
 29c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 2a0:	08 95       	ret

000002a2 <I2C_Write>:
 2a2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 2a6:	84 e8       	ldi	r24, 0x84	; 132
 2a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2ac:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2b0:	87 ff       	sbrs	r24, 7
 2b2:	fc cf       	rjmp	.-8      	; 0x2ac <I2C_Write+0xa>
 2b4:	08 95       	ret

000002b6 <MPU6050_WriteByte>:
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	d8 2f       	mov	r29, r24
 2bc:	c6 2f       	mov	r28, r22
 2be:	0e 94 35 01 	call	0x26a	; 0x26a <I2C_Start>
 2c2:	80 ed       	ldi	r24, 0xD0	; 208
 2c4:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 2c8:	8d 2f       	mov	r24, r29
 2ca:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 2ce:	8c 2f       	mov	r24, r28
 2d0:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 2d4:	84 e9       	ldi	r24, 0x94	; 148
 2d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2da:	df 91       	pop	r29
 2dc:	cf 91       	pop	r28
 2de:	08 95       	ret

000002e0 <MPU6050_WriteByteS>:
 2e0:	ff 92       	push	r15
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	c8 2f       	mov	r28, r24
 2ec:	f6 2e       	mov	r15, r22
 2ee:	07 2f       	mov	r16, r23
 2f0:	14 2f       	mov	r17, r20
 2f2:	0e 94 35 01 	call	0x26a	; 0x26a <I2C_Start>
 2f6:	80 ed       	ldi	r24, 0xD0	; 208
 2f8:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 2fc:	8c 2f       	mov	r24, r28
 2fe:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 302:	cf 2d       	mov	r28, r15
 304:	d0 2f       	mov	r29, r16
 306:	89 91       	ld	r24, Y+
 308:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 30c:	11 50       	subi	r17, 0x01	; 1
 30e:	d9 f7       	brne	.-10     	; 0x306 <MPU6050_WriteByteS+0x26>
 310:	84 e9       	ldi	r24, 0x94	; 148
 312:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	1f 91       	pop	r17
 31c:	0f 91       	pop	r16
 31e:	ff 90       	pop	r15
 320:	08 95       	ret

00000322 <MPU6050_ReadByteS>:
 322:	ef 92       	push	r14
 324:	ff 92       	push	r15
 326:	0f 93       	push	r16
 328:	1f 93       	push	r17
 32a:	cf 93       	push	r28
 32c:	f8 2e       	mov	r15, r24
 32e:	8b 01       	movw	r16, r22
 330:	c4 2f       	mov	r28, r20
 332:	0e 94 35 01 	call	0x26a	; 0x26a <I2C_Start>
 336:	80 ed       	ldi	r24, 0xD0	; 208
 338:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 33c:	8f 2d       	mov	r24, r15
 33e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 342:	0e 94 35 01 	call	0x26a	; 0x26a <I2C_Start>
 346:	81 ed       	ldi	r24, 0xD1	; 209
 348:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_Write>
 34c:	c1 30       	cpi	r28, 0x01	; 1
 34e:	29 f4       	brne	.+10     	; 0x35a <MPU6050_ReadByteS+0x38>
 350:	0e 94 47 01 	call	0x28e	; 0x28e <I2C_ReadNoAsk>
 354:	f8 01       	movw	r30, r16
 356:	80 83       	st	Z, r24
 358:	09 c0       	rjmp	.+18     	; 0x36c <MPU6050_ReadByteS+0x4a>
 35a:	78 01       	movw	r14, r16
 35c:	ff ef       	ldi	r31, 0xFF	; 255
 35e:	ef 1a       	sub	r14, r31
 360:	ff 0a       	sbc	r15, r31
 362:	0e 94 3d 01 	call	0x27a	; 0x27a <I2C_ReadAsk>
 366:	f8 01       	movw	r30, r16
 368:	80 83       	st	Z, r24
 36a:	87 01       	movw	r16, r14
 36c:	c1 50       	subi	r28, 0x01	; 1
 36e:	71 f7       	brne	.-36     	; 0x34c <MPU6050_ReadByteS+0x2a>
 370:	84 e9       	ldi	r24, 0x94	; 148
 372:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 376:	cf 91       	pop	r28
 378:	1f 91       	pop	r17
 37a:	0f 91       	pop	r16
 37c:	ff 90       	pop	r15
 37e:	ef 90       	pop	r14
 380:	08 95       	ret

00000382 <main>:
 382:	cf 93       	push	r28
 384:	df 93       	push	r29
 386:	cd b7       	in	r28, 0x3d	; 61
 388:	de b7       	in	r29, 0x3e	; 62
 38a:	2c 97       	sbiw	r28, 0x0c	; 12
 38c:	0f b6       	in	r0, 0x3f	; 63
 38e:	f8 94       	cli
 390:	de bf       	out	0x3e, r29	; 62
 392:	0f be       	out	0x3f, r0	; 63
 394:	cd bf       	out	0x3d, r28	; 61
 396:	8a b1       	in	r24, 0x0a	; 10
 398:	8f 67       	ori	r24, 0x7F	; 127
 39a:	8a b9       	out	0x0a, r24	; 10
 39c:	8f ef       	ldi	r24, 0xFF	; 255
 39e:	99 ef       	ldi	r25, 0xF9	; 249
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <main+0x1e>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x24>
 3a6:	00 00       	nop
 3a8:	8b b1       	in	r24, 0x0b	; 11
 3aa:	8c 79       	andi	r24, 0x9C	; 156
 3ac:	8b b9       	out	0x0b, r24	; 11
 3ae:	8b b1       	in	r24, 0x0b	; 11
 3b0:	88 61       	ori	r24, 0x18	; 24
 3b2:	8b b9       	out	0x0b, r24	; 11
 3b4:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
 3b8:	87 ec       	ldi	r24, 0xC7	; 199
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <main+0x3a>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <main+0x40>
 3c2:	00 00       	nop
 3c4:	8b b1       	in	r24, 0x0b	; 11
 3c6:	8c 79       	andi	r24, 0x9C	; 156
 3c8:	8b b9       	out	0x0b, r24	; 11
 3ca:	8b b1       	in	r24, 0x0b	; 11
 3cc:	88 61       	ori	r24, 0x18	; 24
 3ce:	8b b9       	out	0x0b, r24	; 11
 3d0:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
 3d4:	87 ec       	ldi	r24, 0xC7	; 199
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <main+0x56>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <main+0x5c>
 3de:	00 00       	nop
 3e0:	8b b1       	in	r24, 0x0b	; 11
 3e2:	84 79       	andi	r24, 0x94	; 148
 3e4:	8b b9       	out	0x0b, r24	; 11
 3e6:	5c 9a       	sbi	0x0b, 4	; 11
 3e8:	0e 94 40 00 	call	0x80	; 0x80 <Enable>
 3ec:	0e 94 46 00 	call	0x8c	; 0x8c <BusyFlag>
 3f0:	88 e2       	ldi	r24, 0x28	; 40
 3f2:	0e 94 5b 00 	call	0xb6	; 0xb6 <LCD_Command>
 3f6:	8c e0       	ldi	r24, 0x0C	; 12
 3f8:	0e 94 5b 00 	call	0xb6	; 0xb6 <LCD_Command>
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	0e 94 5b 00 	call	0xb6	; 0xb6 <LCD_Command>
 402:	82 e0       	ldi	r24, 0x02	; 2
 404:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
 408:	41 e0       	ldi	r20, 0x01	; 1
 40a:	61 e0       	ldi	r22, 0x01	; 1
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	8b e6       	ldi	r24, 0x6B	; 107
 410:	0e 94 70 01 	call	0x2e0	; 0x2e0 <MPU6050_WriteByteS>
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	8a e1       	ldi	r24, 0x1A	; 26
 418:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <MPU6050_WriteByte>
 41c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <SPI_Initialize>
 420:	68 e7       	ldi	r22, 0x78	; 120
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <NRF24_WriteByte>
 428:	8f e3       	ldi	r24, 0x3F	; 63
 42a:	9f e1       	ldi	r25, 0x1F	; 31
 42c:	01 97       	sbiw	r24, 0x01	; 1
 42e:	f1 f7       	brne	.-4      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 430:	00 c0       	rjmp	.+0      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 432:	00 00       	nop
 434:	29 9a       	sbi	0x05, 1	; 5
 436:	95 e3       	ldi	r25, 0x35	; 53
 438:	9a 95       	dec	r25
 43a:	f1 f7       	brne	.-4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 43c:	00 00       	nop
 43e:	6a e7       	ldi	r22, 0x7A	; 122
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <NRF24_WriteByte>
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <NRF24_WriteByte>
 44e:	61 e0       	ldi	r22, 0x01	; 1
 450:	82 e0       	ldi	r24, 0x02	; 2
 452:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <NRF24_WriteByte>
 456:	63 e1       	ldi	r22, 0x13	; 19
 458:	84 e0       	ldi	r24, 0x04	; 4
 45a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <NRF24_WriteByte>
 45e:	6c e0       	ldi	r22, 0x0C	; 12
 460:	81 e1       	ldi	r24, 0x11	; 17
 462:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <NRF24_WriteByte>
 466:	46 e0       	ldi	r20, 0x06	; 6
 468:	be 01       	movw	r22, r28
 46a:	6f 5f       	subi	r22, 0xFF	; 255
 46c:	7f 4f       	sbci	r23, 0xFF	; 255
 46e:	8b e3       	ldi	r24, 0x3B	; 59
 470:	0e 94 91 01 	call	0x322	; 0x322 <MPU6050_ReadByteS>
 474:	46 e0       	ldi	r20, 0x06	; 6
 476:	be 01       	movw	r22, r28
 478:	6a 5f       	subi	r22, 0xFA	; 250
 47a:	7f 4f       	sbci	r23, 0xFF	; 255
 47c:	83 e4       	ldi	r24, 0x43	; 67
 47e:	0e 94 91 01 	call	0x322	; 0x322 <MPU6050_ReadByteS>
 482:	6c e0       	ldi	r22, 0x0C	; 12
 484:	ce 01       	movw	r24, r28
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	0e 94 0c 01 	call	0x218	; 0x218 <NRF24_WriteTxFifo>
 48c:	89 81       	ldd	r24, Y+1	; 0x01
 48e:	9a 81       	ldd	r25, Y+2	; 0x02
 490:	20 e0       	ldi	r18, 0x00	; 0
 492:	40 e0       	ldi	r20, 0x00	; 0
 494:	65 e0       	ldi	r22, 0x05	; 5
 496:	98 27       	eor	r25, r24
 498:	89 27       	eor	r24, r25
 49a:	98 27       	eor	r25, r24
 49c:	0e 94 ab 00 	call	0x156	; 0x156 <LCD_Integer2String>
 4a0:	8b 81       	ldd	r24, Y+3	; 0x03
 4a2:	9c 81       	ldd	r25, Y+4	; 0x04
 4a4:	28 e0       	ldi	r18, 0x08	; 8
 4a6:	40 e0       	ldi	r20, 0x00	; 0
 4a8:	65 e0       	ldi	r22, 0x05	; 5
 4aa:	98 27       	eor	r25, r24
 4ac:	89 27       	eor	r24, r25
 4ae:	98 27       	eor	r25, r24
 4b0:	0e 94 ab 00 	call	0x156	; 0x156 <LCD_Integer2String>
 4b4:	8d 81       	ldd	r24, Y+5	; 0x05
 4b6:	9e 81       	ldd	r25, Y+6	; 0x06
 4b8:	20 e0       	ldi	r18, 0x00	; 0
 4ba:	41 e0       	ldi	r20, 0x01	; 1
 4bc:	65 e0       	ldi	r22, 0x05	; 5
 4be:	98 27       	eor	r25, r24
 4c0:	89 27       	eor	r24, r25
 4c2:	98 27       	eor	r25, r24
 4c4:	0e 94 ab 00 	call	0x156	; 0x156 <LCD_Integer2String>
 4c8:	ce cf       	rjmp	.-100    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>

000004ca <__udivmodhi4>:
 4ca:	aa 1b       	sub	r26, r26
 4cc:	bb 1b       	sub	r27, r27
 4ce:	51 e1       	ldi	r21, 0x11	; 17
 4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <__udivmodhi4_ep>

000004d2 <__udivmodhi4_loop>:
 4d2:	aa 1f       	adc	r26, r26
 4d4:	bb 1f       	adc	r27, r27
 4d6:	a6 17       	cp	r26, r22
 4d8:	b7 07       	cpc	r27, r23
 4da:	10 f0       	brcs	.+4      	; 0x4e0 <__udivmodhi4_ep>
 4dc:	a6 1b       	sub	r26, r22
 4de:	b7 0b       	sbc	r27, r23

000004e0 <__udivmodhi4_ep>:
 4e0:	88 1f       	adc	r24, r24
 4e2:	99 1f       	adc	r25, r25
 4e4:	5a 95       	dec	r21
 4e6:	a9 f7       	brne	.-22     	; 0x4d2 <__udivmodhi4_loop>
 4e8:	80 95       	com	r24
 4ea:	90 95       	com	r25
 4ec:	bc 01       	movw	r22, r24
 4ee:	cd 01       	movw	r24, r26
 4f0:	08 95       	ret

000004f2 <_exit>:
 4f2:	f8 94       	cli

000004f4 <__stop_program>:
 4f4:	ff cf       	rjmp	.-2      	; 0x4f4 <__stop_program>
