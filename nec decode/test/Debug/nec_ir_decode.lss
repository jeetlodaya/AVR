
nec_ir_decode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000c22  00000cd6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c22  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800114  00800114  00000cea  2**0
                  ALLOC
  3 .eeprom       00000003  00810000  00810000  00000cea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00000ced  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d4c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000000d0  00000000  00000000  00000d90  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000e07  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000800  00000000  00000000  00001c67  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000089f  00000000  00000000  00002467  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000154  00000000  00000000  00002d08  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000005b5  00000000  00000000  00002e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000181  00000000  00000000  00003411  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00003592  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e2       	ldi	r30, 0x22	; 34
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 32       	cpi	r26, 0x21	; 33
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 44 02 	call	0x488	; 0x488 <main>
  9e:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
}

void IR_DeInitialize()
{
	TCCR1B = 0;
	TIMSK1 = 0;
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <IR_Initialize>:
  ca:	82 e8       	ldi	r24, 0x82	; 130
  cc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
  d0:	81 e2       	ldi	r24, 0x21	; 33
  d2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
  d6:	08 95       	ret

000000d8 <__vector_10>:
}

ISR (TIMER1_CAPT_vect)
{
  d8:	1f 92       	push	r1
  da:	0f 92       	push	r0
  dc:	0f b6       	in	r0, 0x3f	; 63
  de:	0f 92       	push	r0
  e0:	11 24       	eor	r1, r1
  e2:	2f 93       	push	r18
  e4:	3f 93       	push	r19
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
	TCNT1 = 0;
  ee:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
  f2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	nec_current_state += 1;
  f6:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
  fa:	8f 5f       	subi	r24, 0xFF	; 255
  fc:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <nec_current_state>
	repeat_timer = 0;
 100:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
	
	if (nec_current_state == 2)
 104:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 108:	82 30       	cpi	r24, 0x02	; 2
 10a:	a9 f4       	brne	.+42     	; 0x136 <__vector_10+0x5e>
	{
		if (!(ICR1 <= IR_START_TIME_H && ICR1 >= IR_START_TIME_L))
 10c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 110:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 114:	81 33       	cpi	r24, 0x31	; 49
 116:	95 47       	sbci	r25, 0x75	; 117
 118:	40 f4       	brcc	.+16     	; 0x12a <__vector_10+0x52>
 11a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 11e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 122:	88 3a       	cpi	r24, 0xA8	; 168
 124:	91 46       	sbci	r25, 0x61	; 97
 126:	08 f0       	brcs	.+2      	; 0x12a <__vector_10+0x52>
 128:	4a c1       	rjmp	.+660    	; 0x3be <__vector_10+0x2e6>
		{
			nec_current_state = 0;
 12a:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <nec_current_state>
			nec_current_status = TIMING_ERR;
 12e:	83 e0       	ldi	r24, 0x03	; 3
 130:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 134:	44 c1       	rjmp	.+648    	; 0x3be <__vector_10+0x2e6>
		}
	}
	else if (nec_current_state <= 34 && nec_current_state >=  3)
 136:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 13a:	83 32       	cpi	r24, 0x23	; 35
 13c:	08 f0       	brcs	.+2      	; 0x140 <__vector_10+0x68>
 13e:	cb c0       	rjmp	.+406    	; 0x2d6 <__vector_10+0x1fe>
 140:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 144:	83 30       	cpi	r24, 0x03	; 3
 146:	08 f4       	brcc	.+2      	; 0x14a <__vector_10+0x72>
 148:	c6 c0       	rjmp	.+396    	; 0x2d6 <__vector_10+0x1fe>
	{
		if (ICR1 <= IR_HIGH_TIME_H && ICR1 >= IR_HIGH_TIME_L)
 14a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 14e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 152:	81 3c       	cpi	r24, 0xC1	; 193
 154:	92 41       	sbci	r25, 0x12	; 18
 156:	08 f0       	brcs	.+2      	; 0x15a <__vector_10+0x82>
 158:	54 c0       	rjmp	.+168    	; 0x202 <__vector_10+0x12a>
 15a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 15e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 162:	80 3a       	cpi	r24, 0xA0	; 160
 164:	9f 40       	sbci	r25, 0x0F	; 15
 166:	08 f4       	brcc	.+2      	; 0x16a <__vector_10+0x92>
 168:	4c c0       	rjmp	.+152    	; 0x202 <__vector_10+0x12a>
		{
			if (nec_current_state <= 10)
 16a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 16e:	8b 30       	cpi	r24, 0x0B	; 11
 170:	80 f4       	brcc	.+32     	; 0x192 <__vector_10+0xba>
				nec_current_packet.addr_l |= (1 << (nec_current_state - 3));	
 172:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 176:	e7 e1       	ldi	r30, 0x17	; 23
 178:	f1 e0       	ldi	r31, 0x01	; 1
 17a:	30 81       	ld	r19, Z
 17c:	23 50       	subi	r18, 0x03	; 3
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	02 c0       	rjmp	.+4      	; 0x188 <__vector_10+0xb0>
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	2a 95       	dec	r18
 18a:	e2 f7       	brpl	.-8      	; 0x184 <__vector_10+0xac>
 18c:	83 2b       	or	r24, r19
 18e:	80 83       	st	Z, r24
 190:	16 c1       	rjmp	.+556    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 18)
 192:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 196:	83 31       	cpi	r24, 0x13	; 19
 198:	80 f4       	brcc	.+32     	; 0x1ba <__vector_10+0xe2>
				nec_current_packet.addr_h |= (1 << (nec_current_state - 11));
 19a:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 19e:	e7 e1       	ldi	r30, 0x17	; 23
 1a0:	f1 e0       	ldi	r31, 0x01	; 1
 1a2:	31 81       	ldd	r19, Z+1	; 0x01
 1a4:	2b 50       	subi	r18, 0x0B	; 11
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <__vector_10+0xd8>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	2a 95       	dec	r18
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <__vector_10+0xd4>
 1b4:	83 2b       	or	r24, r19
 1b6:	81 83       	std	Z+1, r24	; 0x01
 1b8:	02 c1       	rjmp	.+516    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 26)
 1ba:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 1be:	8b 31       	cpi	r24, 0x1B	; 27
 1c0:	80 f4       	brcc	.+32     	; 0x1e2 <__vector_10+0x10a>
				nec_current_packet.cmd |= (1 << (nec_current_state  - 19));
 1c2:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 1c6:	e7 e1       	ldi	r30, 0x17	; 23
 1c8:	f1 e0       	ldi	r31, 0x01	; 1
 1ca:	32 81       	ldd	r19, Z+2	; 0x02
 1cc:	23 51       	subi	r18, 0x13	; 19
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <__vector_10+0x100>
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	2a 95       	dec	r18
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <__vector_10+0xfc>
 1dc:	83 2b       	or	r24, r19
 1de:	82 83       	std	Z+2, r24	; 0x02
 1e0:	ee c0       	rjmp	.+476    	; 0x3be <__vector_10+0x2e6>
			else 
				nec_current_packet.cmd_inv |= (1 << (nec_current_state - 27));
 1e2:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 1e6:	e7 e1       	ldi	r30, 0x17	; 23
 1e8:	f1 e0       	ldi	r31, 0x01	; 1
 1ea:	33 81       	ldd	r19, Z+3	; 0x03
 1ec:	2b 51       	subi	r18, 0x1B	; 27
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <__vector_10+0x120>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	2a 95       	dec	r18
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <__vector_10+0x11c>
 1fc:	83 2b       	or	r24, r19
 1fe:	83 83       	std	Z+3, r24	; 0x03
 200:	de c0       	rjmp	.+444    	; 0x3be <__vector_10+0x2e6>
		}
		else if (ICR1 <= IR_LOW_TIME_H && ICR1 >= IR_LOW_TIME_L)
 202:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 206:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 20a:	81 36       	cpi	r24, 0x61	; 97
 20c:	99 40       	sbci	r25, 0x09	; 9
 20e:	08 f0       	brcs	.+2      	; 0x212 <__vector_10+0x13a>
 210:	5c c0       	rjmp	.+184    	; 0x2ca <__vector_10+0x1f2>
 212:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 216:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 21a:	88 30       	cpi	r24, 0x08	; 8
 21c:	97 40       	sbci	r25, 0x07	; 7
 21e:	08 f4       	brcc	.+2      	; 0x222 <__vector_10+0x14a>
 220:	54 c0       	rjmp	.+168    	; 0x2ca <__vector_10+0x1f2>
		{
			if (nec_current_state <= 10)
 222:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 226:	8b 30       	cpi	r24, 0x0B	; 11
 228:	90 f4       	brcc	.+36     	; 0x24e <__vector_10+0x176>
				nec_current_packet.addr_l &= ~(1 << (nec_current_state - 3));
 22a:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 22e:	e7 e1       	ldi	r30, 0x17	; 23
 230:	f1 e0       	ldi	r31, 0x01	; 1
 232:	30 81       	ld	r19, Z
 234:	23 50       	subi	r18, 0x03	; 3
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	02 c0       	rjmp	.+4      	; 0x240 <__vector_10+0x168>
 23c:	88 0f       	add	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	2a 95       	dec	r18
 242:	e2 f7       	brpl	.-8      	; 0x23c <__vector_10+0x164>
 244:	80 95       	com	r24
 246:	90 95       	com	r25
 248:	83 23       	and	r24, r19
 24a:	80 83       	st	Z, r24
 24c:	b8 c0       	rjmp	.+368    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 18)
 24e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 252:	83 31       	cpi	r24, 0x13	; 19
 254:	90 f4       	brcc	.+36     	; 0x27a <__vector_10+0x1a2>
				nec_current_packet.addr_h &= ~(1 << (nec_current_state - 11));
 256:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 25a:	e7 e1       	ldi	r30, 0x17	; 23
 25c:	f1 e0       	ldi	r31, 0x01	; 1
 25e:	31 81       	ldd	r19, Z+1	; 0x01
 260:	2b 50       	subi	r18, 0x0B	; 11
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <__vector_10+0x194>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	2a 95       	dec	r18
 26e:	e2 f7       	brpl	.-8      	; 0x268 <__vector_10+0x190>
 270:	80 95       	com	r24
 272:	90 95       	com	r25
 274:	83 23       	and	r24, r19
 276:	81 83       	std	Z+1, r24	; 0x01
 278:	a2 c0       	rjmp	.+324    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 26)
 27a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 27e:	8b 31       	cpi	r24, 0x1B	; 27
 280:	90 f4       	brcc	.+36     	; 0x2a6 <__vector_10+0x1ce>
				nec_current_packet.cmd &= ~(1 << (nec_current_state - 19));
 282:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 286:	e7 e1       	ldi	r30, 0x17	; 23
 288:	f1 e0       	ldi	r31, 0x01	; 1
 28a:	32 81       	ldd	r19, Z+2	; 0x02
 28c:	23 51       	subi	r18, 0x13	; 19
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <__vector_10+0x1c0>
 294:	88 0f       	add	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	2a 95       	dec	r18
 29a:	e2 f7       	brpl	.-8      	; 0x294 <__vector_10+0x1bc>
 29c:	80 95       	com	r24
 29e:	90 95       	com	r25
 2a0:	83 23       	and	r24, r19
 2a2:	82 83       	std	Z+2, r24	; 0x02
 2a4:	8c c0       	rjmp	.+280    	; 0x3be <__vector_10+0x2e6>
			else
				nec_current_packet.cmd_inv &= ~(1 << (nec_current_state - 27));
 2a6:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <nec_current_state>
 2aa:	e7 e1       	ldi	r30, 0x17	; 23
 2ac:	f1 e0       	ldi	r31, 0x01	; 1
 2ae:	33 81       	ldd	r19, Z+3	; 0x03
 2b0:	2b 51       	subi	r18, 0x1B	; 27
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <__vector_10+0x1e4>
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	2a 95       	dec	r18
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <__vector_10+0x1e0>
 2c0:	80 95       	com	r24
 2c2:	90 95       	com	r25
 2c4:	83 23       	and	r24, r19
 2c6:	83 83       	std	Z+3, r24	; 0x03
 2c8:	7a c0       	rjmp	.+244    	; 0x3be <__vector_10+0x2e6>
		}
		else
		{
			nec_current_state = 0;
 2ca:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <nec_current_state>
			nec_current_status = TIMING_ERR;
 2ce:	83 e0       	ldi	r24, 0x03	; 3
 2d0:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 2d4:	74 c0       	rjmp	.+232    	; 0x3be <__vector_10+0x2e6>
		}
	}
	else if (nec_current_state == 35)
 2d6:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 2da:	83 32       	cpi	r24, 0x23	; 35
 2dc:	a9 f4       	brne	.+42     	; 0x308 <__vector_10+0x230>
	{
		if (nec_current_packet.cmd == (unsigned char)~(nec_current_packet.cmd_inv))
 2de:	e7 e1       	ldi	r30, 0x17	; 23
 2e0:	f1 e0       	ldi	r31, 0x01	; 1
 2e2:	92 81       	ldd	r25, Z+2	; 0x02
 2e4:	83 81       	ldd	r24, Z+3	; 0x03
 2e6:	80 95       	com	r24
 2e8:	98 13       	cpse	r25, r24
 2ea:	08 c0       	rjmp	.+16     	; 0x2fc <__vector_10+0x224>
		{
			nec_current_status = PACKET_RECVD;
 2ec:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <nec_current_status>
			nec_data_counter++;
 2f0:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <nec_data_counter>
 2f4:	8f 5f       	subi	r24, 0xFF	; 255
 2f6:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <nec_data_counter>
 2fa:	61 c0       	rjmp	.+194    	; 0x3be <__vector_10+0x2e6>
		}
		else
		{
			nec_current_state = 0;
 2fc:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <nec_current_state>
			nec_current_status = CHKSM_ERR;
 300:	84 e0       	ldi	r24, 0x04	; 4
 302:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 306:	5b c0       	rjmp	.+182    	; 0x3be <__vector_10+0x2e6>
		}	
	}
	else if (nec_current_state == 36)
 308:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 30c:	84 32       	cpi	r24, 0x24	; 36
 30e:	39 f5       	brne	.+78     	; 0x35e <__vector_10+0x286>
	{
		if (!(ICR1 <= IR_REPEAT1_TIME_H && ICR1 >= IR_REPEAT1_TIME_L))
 310:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 314:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 318:	81 3c       	cpi	r24, 0xC1	; 193
 31a:	9d 45       	sbci	r25, 0x5D	; 93
 31c:	40 f4       	brcc	.+16     	; 0x32e <__vector_10+0x256>
 31e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 322:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 326:	80 32       	cpi	r24, 0x20	; 32
 328:	9e 44       	sbci	r25, 0x4E	; 78
 32a:	08 f0       	brcs	.+2      	; 0x32e <__vector_10+0x256>
 32c:	48 c0       	rjmp	.+144    	; 0x3be <__vector_10+0x2e6>
		{
			if (ICR1 <= IR_START_TIME_H && ICR1 >= IR_START_TIME_L)
 32e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 332:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 336:	81 33       	cpi	r24, 0x31	; 49
 338:	95 47       	sbci	r25, 0x75	; 117
 33a:	58 f4       	brcc	.+22     	; 0x352 <__vector_10+0x27a>
 33c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 340:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 344:	88 3a       	cpi	r24, 0xA8	; 168
 346:	91 46       	sbci	r25, 0x61	; 97
 348:	20 f0       	brcs	.+8      	; 0x352 <__vector_10+0x27a>
			{
				nec_current_state = 2;
 34a:	82 e0       	ldi	r24, 0x02	; 2
 34c:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <nec_current_state>
 350:	36 c0       	rjmp	.+108    	; 0x3be <__vector_10+0x2e6>
			}
			else
			{
				nec_current_state = 0;
 352:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <nec_current_state>
				nec_current_status = TIMING_ERR;
 356:	83 e0       	ldi	r24, 0x03	; 3
 358:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 35c:	30 c0       	rjmp	.+96     	; 0x3be <__vector_10+0x2e6>
			}
		}
	}
	else if (nec_current_state == 37)
 35e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <nec_current_state>
 362:	85 32       	cpi	r24, 0x25	; 37
 364:	61 f5       	brne	.+88     	; 0x3be <__vector_10+0x2e6>
	{	
		if (ICR1 <= IR_REPEAT2_TIME_H && ICR1 >= IR_REPEAT2_TIME_L)
 366:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 36a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 36e:	89 3e       	cpi	r24, 0xE9	; 233
 370:	9d 4f       	sbci	r25, 0xFD	; 253
 372:	70 f4       	brcc	.+28     	; 0x390 <__vector_10+0x2b8>
 374:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 378:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 37c:	80 33       	cpi	r24, 0x30	; 48
 37e:	92 4f       	sbci	r25, 0xF2	; 242
 380:	38 f0       	brcs	.+14     	; 0x390 <__vector_10+0x2b8>
		{
			nec_current_state = 35;
 382:	83 e2       	ldi	r24, 0x23	; 35
 384:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <nec_current_state>
			nec_current_status = PACKET_RECVD_N_REPEAT_RECVNG;	
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 38e:	17 c0       	rjmp	.+46     	; 0x3be <__vector_10+0x2e6>
		}
		else if (ICR1 <= IR_START_TIME_H && ICR1 >= IR_START_TIME_L)
 390:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 394:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 398:	81 33       	cpi	r24, 0x31	; 49
 39a:	95 47       	sbci	r25, 0x75	; 117
 39c:	58 f4       	brcc	.+22     	; 0x3b4 <__vector_10+0x2dc>
 39e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 3a2:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 3a6:	88 3a       	cpi	r24, 0xA8	; 168
 3a8:	91 46       	sbci	r25, 0x61	; 97
 3aa:	20 f0       	brcs	.+8      	; 0x3b4 <__vector_10+0x2dc>
		{
			nec_current_state = 2;
 3ac:	82 e0       	ldi	r24, 0x02	; 2
 3ae:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <nec_current_state>
 3b2:	05 c0       	rjmp	.+10     	; 0x3be <__vector_10+0x2e6>
		}
		else
		{
			nec_current_state = 0;
 3b4:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <nec_current_state>
			nec_current_status = TIMING_ERR;
 3b8:	83 e0       	ldi	r24, 0x03	; 3
 3ba:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
		}
	}
}
 3be:	ff 91       	pop	r31
 3c0:	ef 91       	pop	r30
 3c2:	9f 91       	pop	r25
 3c4:	8f 91       	pop	r24
 3c6:	3f 91       	pop	r19
 3c8:	2f 91       	pop	r18
 3ca:	0f 90       	pop	r0
 3cc:	0f be       	out	0x3f, r0	; 63
 3ce:	0f 90       	pop	r0
 3d0:	1f 90       	pop	r1
 3d2:	18 95       	reti

000003d4 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
 3d4:	1f 92       	push	r1
 3d6:	0f 92       	push	r0
 3d8:	0f b6       	in	r0, 0x3f	; 63
 3da:	0f 92       	push	r0
 3dc:	11 24       	eor	r1, r1
 3de:	8f 93       	push	r24
	repeat_timer++;
 3e0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 3e4:	8f 5f       	subi	r24, 0xFF	; 255
 3e6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	if (repeat_timer == 5)
 3ea:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 3ee:	85 30       	cpi	r24, 0x05	; 5
 3f0:	29 f4       	brne	.+10     	; 0x3fc <__vector_13+0x28>
	{
		nec_current_state = 0;
 3f2:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <nec_current_state>
		nec_current_status = IDLE;
 3f6:	82 e0       	ldi	r24, 0x02	; 2
 3f8:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
	}
 3fc:	8f 91       	pop	r24
 3fe:	0f 90       	pop	r0
 400:	0f be       	out	0x3f, r0	; 63
 402:	0f 90       	pop	r0
 404:	1f 90       	pop	r1
 406:	18 95       	reti

00000408 <MOTOR_Forward>:
	TCCR0B = (1 << CS00) | (1 << CS02); //prescale 1024
}

void MOTOR_Forward(uint8_t left_speed,uint8_t right_speed)
{
	L293D_PORT |= (1 << L293D_L1) | (1 << L293D_R1);
 408:	9b b1       	in	r25, 0x0b	; 11
 40a:	94 61       	ori	r25, 0x14	; 20
 40c:	9b b9       	out	0x0b, r25	; 11
	L293D_PORT &= ~((1 << L293D_L2) | (1 << L293D_R2));
 40e:	9b b1       	in	r25, 0x0b	; 11
 410:	97 77       	andi	r25, 0x77	; 119
 412:	9b b9       	out	0x0b, r25	; 11
	L_SPEED = left_speed;
 414:	88 bd       	out	0x28, r24	; 40
	R_SPEED = right_speed;
 416:	67 bd       	out	0x27, r22	; 39
 418:	08 95       	ret

0000041a <MOTOR_Backward>:
}

void MOTOR_Backward(uint8_t left_speed,uint8_t right_speed)
{
	L293D_PORT |= (1 << L293D_L2) | (1 << L293D_R2);
 41a:	9b b1       	in	r25, 0x0b	; 11
 41c:	98 68       	ori	r25, 0x88	; 136
 41e:	9b b9       	out	0x0b, r25	; 11
	L293D_PORT &= ~((1 << L293D_L1) | (1 << L293D_R1));
 420:	9b b1       	in	r25, 0x0b	; 11
 422:	9b 7e       	andi	r25, 0xEB	; 235
 424:	9b b9       	out	0x0b, r25	; 11
	L_SPEED = left_speed;
 426:	88 bd       	out	0x28, r24	; 40
	R_SPEED = right_speed;
 428:	67 bd       	out	0x27, r22	; 39
 42a:	08 95       	ret

0000042c <MOTOR_HardLeft>:
}

void MOTOR_HardLeft(uint8_t left_speed,uint8_t right_speed)
{
	L293D_PORT |= (1 << L293D_L2) | (1 << L293D_R1);
 42c:	9b b1       	in	r25, 0x0b	; 11
 42e:	98 61       	ori	r25, 0x18	; 24
 430:	9b b9       	out	0x0b, r25	; 11
	L293D_PORT &= ~((1 << L293D_L1) | (1 << L293D_R2));
 432:	9b b1       	in	r25, 0x0b	; 11
 434:	9b 77       	andi	r25, 0x7B	; 123
 436:	9b b9       	out	0x0b, r25	; 11
	L_SPEED = left_speed;
 438:	88 bd       	out	0x28, r24	; 40
	R_SPEED = right_speed;
 43a:	67 bd       	out	0x27, r22	; 39
 43c:	08 95       	ret

0000043e <MOTOR_HardRight>:
}

void MOTOR_HardRight(uint8_t left_speed,uint8_t right_speed)
{
	L293D_PORT |= (1 << L293D_L1) | (1 << L293D_R2);
 43e:	9b b1       	in	r25, 0x0b	; 11
 440:	94 68       	ori	r25, 0x84	; 132
 442:	9b b9       	out	0x0b, r25	; 11
	L293D_PORT &= ~((1 << L293D_L2) | (1 << L293D_R1));	
 444:	9b b1       	in	r25, 0x0b	; 11
 446:	97 7e       	andi	r25, 0xE7	; 231
 448:	9b b9       	out	0x0b, r25	; 11
	L_SPEED = left_speed;
 44a:	88 bd       	out	0x28, r24	; 40
	R_SPEED = right_speed;
 44c:	67 bd       	out	0x27, r22	; 39
 44e:	08 95       	ret

00000450 <MOTOR_SoftFrontRight>:
}

void MOTOR_SoftFrontRight(uint8_t left_speed)
{
	L293D_PORT |= (1 << L293D_L1);
 450:	5a 9a       	sbi	0x0b, 2	; 11
	L293D_PORT &= ~((1 << L293D_L2) | (1 << L293D_R1) | (1 << L293D_R2));
 452:	9b b1       	in	r25, 0x0b	; 11
 454:	97 76       	andi	r25, 0x67	; 103
 456:	9b b9       	out	0x0b, r25	; 11
	L_SPEED = left_speed;
 458:	88 bd       	out	0x28, r24	; 40
 45a:	08 95       	ret

0000045c <MOTOR_SoftFrontLeft>:
}

void MOTOR_SoftFrontLeft(uint8_t right_speed)
{
	L293D_PORT |= (1 << L293D_R1);
 45c:	5c 9a       	sbi	0x0b, 4	; 11
	L293D_PORT &= ~((1 << L293D_L1) | (1 << L293D_L2) | (1 << L293D_R2));
 45e:	9b b1       	in	r25, 0x0b	; 11
 460:	93 77       	andi	r25, 0x73	; 115
 462:	9b b9       	out	0x0b, r25	; 11
	R_SPEED = right_speed;
 464:	87 bd       	out	0x27, r24	; 39
 466:	08 95       	ret

00000468 <MOTOR_SoftBackRight>:
}

void MOTOR_SoftBackRight(uint8_t right_speed)
{
	L293D_PORT |= (1 << L293D_R2);
 468:	5f 9a       	sbi	0x0b, 7	; 11
	L293D_PORT &= ~((1 << L293D_R1) | (1 << L293D_L1) | (1 << L293D_L2));
 46a:	9b b1       	in	r25, 0x0b	; 11
 46c:	93 7e       	andi	r25, 0xE3	; 227
 46e:	9b b9       	out	0x0b, r25	; 11
	R_SPEED = right_speed;
 470:	87 bd       	out	0x27, r24	; 39
 472:	08 95       	ret

00000474 <MOTOR_SoftBackLeft>:
}

void MOTOR_SoftBackLeft(uint8_t left_speed)
{
	L293D_PORT |= (1 << L293D_L2);
 474:	5b 9a       	sbi	0x0b, 3	; 11
	L293D_PORT &= ~((1 << L293D_L1) | (1 << L293D_R1) | (1 << L293D_R2));
 476:	9b b1       	in	r25, 0x0b	; 11
 478:	9b 76       	andi	r25, 0x6B	; 107
 47a:	9b b9       	out	0x0b, r25	; 11
	L_SPEED = left_speed;
 47c:	88 bd       	out	0x28, r24	; 40
 47e:	08 95       	ret

00000480 <MOTOR_Stop>:
}

void MOTOR_Stop(void)
{
	L293D_PORT &= ~((1 << L293D_L1) | (1 << L293D_R1) | (1 << L293D_L2) | (1 << L293D_R2));
 480:	8b b1       	in	r24, 0x0b	; 11
 482:	83 76       	andi	r24, 0x63	; 99
 484:	8b b9       	out	0x0b, r24	; 11
 486:	08 95       	ret

00000488 <main>:

int main(void)
{
	uint8_t left_motor_speed,right_motor_speed;
	
	left_motor_speed = eeprom_read_byte(&eep_left_motor_speed);
 488:	82 e0       	ldi	r24, 0x02	; 2
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	0e 94 c2 05 	call	0xb84	; 0xb84 <eeprom_read_byte>
 490:	f8 2e       	mov	r15, r24
	right_motor_speed = eeprom_read_byte(&eep_right_motor_speed);
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 94 c2 05 	call	0xb84	; 0xb84 <eeprom_read_byte>
 49a:	e8 2e       	mov	r14, r24

#include "uart.h"

inline void UART_Initialize()
{
	UBRR0H = (uint8_t) (UBBR_VALUE >> 8);
 49c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (uint8_t) UBBR_VALUE;
 4a0:	80 e1       	ldi	r24, 0x10	; 16
 4a2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 4a6:	88 e1       	ldi	r24, 0x18	; 24
 4a8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1 << UPM01) | (1 << UCSZ01) | (1 << UCSZ00) | (1 << USBS0); 
 4ac:	8e e2       	ldi	r24, 0x2E	; 46
 4ae:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	
	UART_Initialize();
	stdout = &mystdout;
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	91 e0       	ldi	r25, 0x01	; 1
 4b6:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <__iob+0x3>
 4ba:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <__iob+0x2>
#include "motor driver.h"

inline void MOTOR_Initialize()
{
	L293D_DDR |= (1 << L293D_EN_L12) | (1 << L293D_EN_R12) | (1 << L293D_L1) | (1 << L293D_L2) | (1 << L293D_R1) | (1 << L293D_R2);
 4be:	8a b1       	in	r24, 0x0a	; 10
 4c0:	8c 6f       	ori	r24, 0xFC	; 252
 4c2:	8a b9       	out	0x0a, r24	; 10
	TCCR0A = (1 << COM0A1) | (1 << COM0B1) | (1 << WGM00) ; //phase corrected pwm 
 4c4:	81 ea       	ldi	r24, 0xA1	; 161
 4c6:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00) | (1 << CS02); //prescale 1024
 4c8:	85 e0       	ldi	r24, 0x05	; 5
 4ca:	85 bd       	out	0x25, r24	; 37
	
	MOTOR_Initialize();
	IR_Initialize();
 4cc:	0e 94 65 00 	call	0xca	; 0xca <IR_Initialize>
	
	LED_DDR |= (1 << LED_1) | (1 << LED_2);
 4d0:	87 b1       	in	r24, 0x07	; 7
 4d2:	80 63       	ori	r24, 0x30	; 48
 4d4:	87 b9       	out	0x07, r24	; 7
	LED_PORT |= eeprom_read_byte(&eep_led);
 4d6:	c8 b1       	in	r28, 0x08	; 8
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 94 c2 05 	call	0xb84	; 0xb84 <eeprom_read_byte>
 4e0:	8c 2b       	or	r24, r28
 4e2:	88 b9       	out	0x08, r24	; 8
	
	sei();
 4e4:	78 94       	sei
	
	while (1)
	{
		if (nec_current_status == PACKET_RECVD || nec_current_status == PACKET_RECVD_N_REPEAT_RECVNG)
		{	
			if (nec_current_packet.cmd == 202 || nec_current_packet.cmd == 147)
 4e6:	c7 e1       	ldi	r28, 0x17	; 23
 4e8:	d1 e0       	ldi	r29, 0x01	; 1
				if (right_motor_speed != 0)
					right_motor_speed -= 5;
			}
			else if (nec_current_packet.cmd == 220)
			{
				LED_PORT ^= (1 << LED_1) | (1 << LED_2);	
 4ea:	0f 2e       	mov	r0, r31
 4ec:	f0 e3       	ldi	r31, 0x30	; 48
 4ee:	df 2e       	mov	r13, r31
 4f0:	f0 2d       	mov	r31, r0
			}
			eeprom_write_byte (&eep_led,LED_PORT);
			eeprom_write_byte (&eep_left_motor_speed, left_motor_speed);
			eeprom_write_byte (&eep_right_motor_speed, right_motor_speed);
		}	
		printf("%u\n",nec_current_packet.cmd);
 4f2:	0f e0       	ldi	r16, 0x0F	; 15
 4f4:	11 e0       	ldi	r17, 0x01	; 1
	
	sei();
	
	while (1)
	{
		if (nec_current_status == PACKET_RECVD || nec_current_status == PACKET_RECVD_N_REPEAT_RECVNG)
 4f6:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <nec_current_status>
 4fa:	88 23       	and	r24, r24
 4fc:	29 f0       	breq	.+10     	; 0x508 <main+0x80>
 4fe:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <nec_current_status>
 502:	81 30       	cpi	r24, 0x01	; 1
 504:	09 f0       	breq	.+2      	; 0x508 <main+0x80>
 506:	48 c0       	rjmp	.+144    	; 0x598 <main+0x110>
		{	
			if (nec_current_packet.cmd == 202 || nec_current_packet.cmd == 147)
 508:	8a 81       	ldd	r24, Y+2	; 0x02
 50a:	8a 3c       	cpi	r24, 0xCA	; 202
 50c:	19 f0       	breq	.+6      	; 0x514 <main+0x8c>
 50e:	8a 81       	ldd	r24, Y+2	; 0x02
 510:	83 39       	cpi	r24, 0x93	; 147
 512:	29 f4       	brne	.+10     	; 0x51e <main+0x96>
				MOTOR_Forward(left_motor_speed,right_motor_speed);
 514:	6e 2d       	mov	r22, r14
 516:	8f 2d       	mov	r24, r15
 518:	0e 94 04 02 	call	0x408	; 0x408 <MOTOR_Forward>
 51c:	43 c0       	rjmp	.+134    	; 0x5a4 <main+0x11c>
			else if (nec_current_packet.cmd == 210 || nec_current_packet.cmd == 139)
 51e:	8a 81       	ldd	r24, Y+2	; 0x02
 520:	82 3d       	cpi	r24, 0xD2	; 210
 522:	19 f0       	breq	.+6      	; 0x52a <main+0xa2>
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	8b 38       	cpi	r24, 0x8B	; 139
 528:	29 f4       	brne	.+10     	; 0x534 <main+0xac>
				MOTOR_Backward(left_motor_speed,right_motor_speed);
 52a:	6e 2d       	mov	r22, r14
 52c:	8f 2d       	mov	r24, r15
 52e:	0e 94 0d 02 	call	0x41a	; 0x41a <MOTOR_Backward>
 532:	38 c0       	rjmp	.+112    	; 0x5a4 <main+0x11c>
			else if (nec_current_packet.cmd == 193 || nec_current_packet.cmd == 200)
 534:	8a 81       	ldd	r24, Y+2	; 0x02
 536:	81 3c       	cpi	r24, 0xC1	; 193
 538:	19 f0       	breq	.+6      	; 0x540 <main+0xb8>
 53a:	8a 81       	ldd	r24, Y+2	; 0x02
 53c:	88 3c       	cpi	r24, 0xC8	; 200
 53e:	29 f4       	brne	.+10     	; 0x54a <main+0xc2>
				MOTOR_HardRight(left_motor_speed,right_motor_speed);	
 540:	6e 2d       	mov	r22, r14
 542:	8f 2d       	mov	r24, r15
 544:	0e 94 1f 02 	call	0x43e	; 0x43e <MOTOR_HardRight>
 548:	2d c0       	rjmp	.+90     	; 0x5a4 <main+0x11c>
			else if (nec_current_packet.cmd == 153 || nec_current_packet.cmd == 142)
 54a:	8a 81       	ldd	r24, Y+2	; 0x02
 54c:	89 39       	cpi	r24, 0x99	; 153
 54e:	19 f0       	breq	.+6      	; 0x556 <main+0xce>
 550:	8a 81       	ldd	r24, Y+2	; 0x02
 552:	8e 38       	cpi	r24, 0x8E	; 142
 554:	29 f4       	brne	.+10     	; 0x560 <main+0xd8>
				MOTOR_HardLeft(left_motor_speed,right_motor_speed);
 556:	6e 2d       	mov	r22, r14
 558:	8f 2d       	mov	r24, r15
 55a:	0e 94 16 02 	call	0x42c	; 0x42c <MOTOR_HardLeft>
 55e:	22 c0       	rjmp	.+68     	; 0x5a4 <main+0x11c>
			else if (nec_current_packet.cmd == 146)
 560:	8a 81       	ldd	r24, Y+2	; 0x02
 562:	82 39       	cpi	r24, 0x92	; 146
 564:	21 f4       	brne	.+8      	; 0x56e <main+0xe6>
				MOTOR_SoftFrontLeft(right_motor_speed);
 566:	8e 2d       	mov	r24, r14
 568:	0e 94 2e 02 	call	0x45c	; 0x45c <MOTOR_SoftFrontLeft>
 56c:	1b c0       	rjmp	.+54     	; 0x5a4 <main+0x11c>
			else if (nec_current_packet.cmd == 204)
 56e:	8a 81       	ldd	r24, Y+2	; 0x02
 570:	8c 3c       	cpi	r24, 0xCC	; 204
 572:	21 f4       	brne	.+8      	; 0x57c <main+0xf4>
				MOTOR_SoftFrontRight(left_motor_speed);	
 574:	8f 2d       	mov	r24, r15
 576:	0e 94 28 02 	call	0x450	; 0x450 <MOTOR_SoftFrontRight>
 57a:	14 c0       	rjmp	.+40     	; 0x5a4 <main+0x11c>
			else if (nec_current_packet.cmd == 138)
 57c:	8a 81       	ldd	r24, Y+2	; 0x02
 57e:	8a 38       	cpi	r24, 0x8A	; 138
 580:	21 f4       	brne	.+8      	; 0x58a <main+0x102>
				MOTOR_SoftBackLeft(left_motor_speed);
 582:	8f 2d       	mov	r24, r15
 584:	0e 94 3a 02 	call	0x474	; 0x474 <MOTOR_SoftBackLeft>
 588:	0d c0       	rjmp	.+26     	; 0x5a4 <main+0x11c>
			else if (nec_current_packet.cmd == 196)
 58a:	8a 81       	ldd	r24, Y+2	; 0x02
 58c:	84 3c       	cpi	r24, 0xC4	; 196
 58e:	51 f4       	brne	.+20     	; 0x5a4 <main+0x11c>
				MOTOR_SoftBackRight(right_motor_speed);			
 590:	8e 2d       	mov	r24, r14
 592:	0e 94 34 02 	call	0x468	; 0x468 <MOTOR_SoftBackRight>
 596:	06 c0       	rjmp	.+12     	; 0x5a4 <main+0x11c>
		}
		else if (nec_current_status == IDLE)
 598:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <nec_current_status>
 59c:	82 30       	cpi	r24, 0x02	; 2
 59e:	11 f4       	brne	.+4      	; 0x5a4 <main+0x11c>
			MOTOR_Stop();
 5a0:	0e 94 40 02 	call	0x480	; 0x480 <MOTOR_Stop>
			
		if(nec_data_counter >= 1)
 5a4:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <nec_data_counter>
 5a8:	88 23       	and	r24, r24
 5aa:	c9 f1       	breq	.+114    	; 0x61e <main+0x196>
		{	
			nec_data_counter = 0;
 5ac:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <nec_data_counter>
			if(nec_current_packet.cmd == 221)
 5b0:	8a 81       	ldd	r24, Y+2	; 0x02
 5b2:	8d 3d       	cpi	r24, 0xDD	; 221
 5b4:	31 f4       	brne	.+12     	; 0x5c2 <main+0x13a>
			{
				if (left_motor_speed != 255)
 5b6:	8f ef       	ldi	r24, 0xFF	; 255
 5b8:	f8 16       	cp	r15, r24
 5ba:	11 f1       	breq	.+68     	; 0x600 <main+0x178>
					left_motor_speed += 5;
 5bc:	85 e0       	ldi	r24, 0x05	; 5
 5be:	f8 0e       	add	r15, r24
 5c0:	1f c0       	rjmp	.+62     	; 0x600 <main+0x178>
			}
			else if (nec_current_packet.cmd == 140)
 5c2:	8a 81       	ldd	r24, Y+2	; 0x02
 5c4:	8c 38       	cpi	r24, 0x8C	; 140
 5c6:	29 f4       	brne	.+10     	; 0x5d2 <main+0x14a>
			{
				if (left_motor_speed != 0)
 5c8:	ff 20       	and	r15, r15
 5ca:	d1 f0       	breq	.+52     	; 0x600 <main+0x178>
					left_motor_speed -= 5;
 5cc:	8b ef       	ldi	r24, 0xFB	; 251
 5ce:	f8 0e       	add	r15, r24
 5d0:	17 c0       	rjmp	.+46     	; 0x600 <main+0x178>
			}
			else if (nec_current_packet.cmd == 152)
 5d2:	8a 81       	ldd	r24, Y+2	; 0x02
 5d4:	88 39       	cpi	r24, 0x98	; 152
 5d6:	31 f4       	brne	.+12     	; 0x5e4 <main+0x15c>
			{
				if (right_motor_speed != 255)
 5d8:	8f ef       	ldi	r24, 0xFF	; 255
 5da:	e8 16       	cp	r14, r24
 5dc:	89 f0       	breq	.+34     	; 0x600 <main+0x178>
					right_motor_speed += 5 ;
 5de:	85 e0       	ldi	r24, 0x05	; 5
 5e0:	e8 0e       	add	r14, r24
 5e2:	0e c0       	rjmp	.+28     	; 0x600 <main+0x178>
			}
			else if (nec_current_packet.cmd == 151)
 5e4:	8a 81       	ldd	r24, Y+2	; 0x02
 5e6:	87 39       	cpi	r24, 0x97	; 151
 5e8:	29 f4       	brne	.+10     	; 0x5f4 <main+0x16c>
			{
				if (right_motor_speed != 0)
 5ea:	ee 20       	and	r14, r14
 5ec:	49 f0       	breq	.+18     	; 0x600 <main+0x178>
					right_motor_speed -= 5;
 5ee:	8b ef       	ldi	r24, 0xFB	; 251
 5f0:	e8 0e       	add	r14, r24
 5f2:	06 c0       	rjmp	.+12     	; 0x600 <main+0x178>
			}
			else if (nec_current_packet.cmd == 220)
 5f4:	8a 81       	ldd	r24, Y+2	; 0x02
 5f6:	8c 3d       	cpi	r24, 0xDC	; 220
 5f8:	19 f4       	brne	.+6      	; 0x600 <main+0x178>
			{
				LED_PORT ^= (1 << LED_1) | (1 << LED_2);	
 5fa:	88 b1       	in	r24, 0x08	; 8
 5fc:	8d 25       	eor	r24, r13
 5fe:	88 b9       	out	0x08, r24	; 8
			}
			eeprom_write_byte (&eep_led,LED_PORT);
 600:	68 b1       	in	r22, 0x08	; 8
 602:	80 e0       	ldi	r24, 0x00	; 0
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	0e 94 ca 05 	call	0xb94	; 0xb94 <eeprom_write_byte>
			eeprom_write_byte (&eep_left_motor_speed, left_motor_speed);
 60a:	6f 2d       	mov	r22, r15
 60c:	82 e0       	ldi	r24, 0x02	; 2
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 ca 05 	call	0xb94	; 0xb94 <eeprom_write_byte>
			eeprom_write_byte (&eep_right_motor_speed, right_motor_speed);
 614:	6e 2d       	mov	r22, r14
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 94 ca 05 	call	0xb94	; 0xb94 <eeprom_write_byte>
		}	
		printf("%u\n",nec_current_packet.cmd);
 61e:	8a 81       	ldd	r24, Y+2	; 0x02
 620:	1f 92       	push	r1
 622:	8f 93       	push	r24
 624:	1f 93       	push	r17
 626:	0f 93       	push	r16
 628:	0e 94 1b 03 	call	0x636	; 0x636 <printf>
	}
 62c:	0f 90       	pop	r0
 62e:	0f 90       	pop	r0
 630:	0f 90       	pop	r0
 632:	0f 90       	pop	r0
 634:	60 cf       	rjmp	.-320    	; 0x4f6 <main+0x6e>

00000636 <printf>:
 636:	a0 e0       	ldi	r26, 0x00	; 0
 638:	b0 e0       	ldi	r27, 0x00	; 0
 63a:	e1 e2       	ldi	r30, 0x21	; 33
 63c:	f3 e0       	ldi	r31, 0x03	; 3
 63e:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__prologue_saves__+0x20>
 642:	ae 01       	movw	r20, r28
 644:	4b 5f       	subi	r20, 0xFB	; 251
 646:	5f 4f       	sbci	r21, 0xFF	; 255
 648:	fa 01       	movw	r30, r20
 64a:	61 91       	ld	r22, Z+
 64c:	71 91       	ld	r23, Z+
 64e:	af 01       	movw	r20, r30
 650:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <__iob+0x2>
 654:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <__iob+0x3>
 658:	0e 94 31 03 	call	0x662	; 0x662 <vfprintf>
 65c:	e2 e0       	ldi	r30, 0x02	; 2
 65e:	0c 94 04 06 	jmp	0xc08	; 0xc08 <__epilogue_restores__+0x20>

00000662 <vfprintf>:
 662:	ab e0       	ldi	r26, 0x0B	; 11
 664:	b0 e0       	ldi	r27, 0x00	; 0
 666:	e7 e3       	ldi	r30, 0x37	; 55
 668:	f3 e0       	ldi	r31, 0x03	; 3
 66a:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__prologue_saves__>
 66e:	6c 01       	movw	r12, r24
 670:	7b 01       	movw	r14, r22
 672:	8a 01       	movw	r16, r20
 674:	fc 01       	movw	r30, r24
 676:	17 82       	std	Z+7, r1	; 0x07
 678:	16 82       	std	Z+6, r1	; 0x06
 67a:	83 81       	ldd	r24, Z+3	; 0x03
 67c:	81 ff       	sbrs	r24, 1
 67e:	cc c1       	rjmp	.+920    	; 0xa18 <__stack+0x119>
 680:	ce 01       	movw	r24, r28
 682:	01 96       	adiw	r24, 0x01	; 1
 684:	3c 01       	movw	r6, r24
 686:	f6 01       	movw	r30, r12
 688:	93 81       	ldd	r25, Z+3	; 0x03
 68a:	f7 01       	movw	r30, r14
 68c:	93 fd       	sbrc	r25, 3
 68e:	85 91       	lpm	r24, Z+
 690:	93 ff       	sbrs	r25, 3
 692:	81 91       	ld	r24, Z+
 694:	7f 01       	movw	r14, r30
 696:	88 23       	and	r24, r24
 698:	09 f4       	brne	.+2      	; 0x69c <vfprintf+0x3a>
 69a:	ba c1       	rjmp	.+884    	; 0xa10 <__stack+0x111>
 69c:	85 32       	cpi	r24, 0x25	; 37
 69e:	39 f4       	brne	.+14     	; 0x6ae <vfprintf+0x4c>
 6a0:	93 fd       	sbrc	r25, 3
 6a2:	85 91       	lpm	r24, Z+
 6a4:	93 ff       	sbrs	r25, 3
 6a6:	81 91       	ld	r24, Z+
 6a8:	7f 01       	movw	r14, r30
 6aa:	85 32       	cpi	r24, 0x25	; 37
 6ac:	29 f4       	brne	.+10     	; 0x6b8 <vfprintf+0x56>
 6ae:	b6 01       	movw	r22, r12
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 6b6:	e7 cf       	rjmp	.-50     	; 0x686 <vfprintf+0x24>
 6b8:	91 2c       	mov	r9, r1
 6ba:	21 2c       	mov	r2, r1
 6bc:	31 2c       	mov	r3, r1
 6be:	ff e1       	ldi	r31, 0x1F	; 31
 6c0:	f3 15       	cp	r31, r3
 6c2:	d8 f0       	brcs	.+54     	; 0x6fa <vfprintf+0x98>
 6c4:	8b 32       	cpi	r24, 0x2B	; 43
 6c6:	79 f0       	breq	.+30     	; 0x6e6 <vfprintf+0x84>
 6c8:	38 f4       	brcc	.+14     	; 0x6d8 <vfprintf+0x76>
 6ca:	80 32       	cpi	r24, 0x20	; 32
 6cc:	79 f0       	breq	.+30     	; 0x6ec <vfprintf+0x8a>
 6ce:	83 32       	cpi	r24, 0x23	; 35
 6d0:	a1 f4       	brne	.+40     	; 0x6fa <vfprintf+0x98>
 6d2:	23 2d       	mov	r18, r3
 6d4:	20 61       	ori	r18, 0x10	; 16
 6d6:	1d c0       	rjmp	.+58     	; 0x712 <vfprintf+0xb0>
 6d8:	8d 32       	cpi	r24, 0x2D	; 45
 6da:	61 f0       	breq	.+24     	; 0x6f4 <vfprintf+0x92>
 6dc:	80 33       	cpi	r24, 0x30	; 48
 6de:	69 f4       	brne	.+26     	; 0x6fa <vfprintf+0x98>
 6e0:	23 2d       	mov	r18, r3
 6e2:	21 60       	ori	r18, 0x01	; 1
 6e4:	16 c0       	rjmp	.+44     	; 0x712 <vfprintf+0xb0>
 6e6:	83 2d       	mov	r24, r3
 6e8:	82 60       	ori	r24, 0x02	; 2
 6ea:	38 2e       	mov	r3, r24
 6ec:	e3 2d       	mov	r30, r3
 6ee:	e4 60       	ori	r30, 0x04	; 4
 6f0:	3e 2e       	mov	r3, r30
 6f2:	2a c0       	rjmp	.+84     	; 0x748 <vfprintf+0xe6>
 6f4:	f3 2d       	mov	r31, r3
 6f6:	f8 60       	ori	r31, 0x08	; 8
 6f8:	1d c0       	rjmp	.+58     	; 0x734 <vfprintf+0xd2>
 6fa:	37 fc       	sbrc	r3, 7
 6fc:	2d c0       	rjmp	.+90     	; 0x758 <vfprintf+0xf6>
 6fe:	20 ed       	ldi	r18, 0xD0	; 208
 700:	28 0f       	add	r18, r24
 702:	2a 30       	cpi	r18, 0x0A	; 10
 704:	40 f0       	brcs	.+16     	; 0x716 <vfprintf+0xb4>
 706:	8e 32       	cpi	r24, 0x2E	; 46
 708:	b9 f4       	brne	.+46     	; 0x738 <vfprintf+0xd6>
 70a:	36 fc       	sbrc	r3, 6
 70c:	81 c1       	rjmp	.+770    	; 0xa10 <__stack+0x111>
 70e:	23 2d       	mov	r18, r3
 710:	20 64       	ori	r18, 0x40	; 64
 712:	32 2e       	mov	r3, r18
 714:	19 c0       	rjmp	.+50     	; 0x748 <vfprintf+0xe6>
 716:	36 fe       	sbrs	r3, 6
 718:	06 c0       	rjmp	.+12     	; 0x726 <vfprintf+0xc4>
 71a:	8a e0       	ldi	r24, 0x0A	; 10
 71c:	98 9e       	mul	r9, r24
 71e:	20 0d       	add	r18, r0
 720:	11 24       	eor	r1, r1
 722:	92 2e       	mov	r9, r18
 724:	11 c0       	rjmp	.+34     	; 0x748 <vfprintf+0xe6>
 726:	ea e0       	ldi	r30, 0x0A	; 10
 728:	2e 9e       	mul	r2, r30
 72a:	20 0d       	add	r18, r0
 72c:	11 24       	eor	r1, r1
 72e:	22 2e       	mov	r2, r18
 730:	f3 2d       	mov	r31, r3
 732:	f0 62       	ori	r31, 0x20	; 32
 734:	3f 2e       	mov	r3, r31
 736:	08 c0       	rjmp	.+16     	; 0x748 <vfprintf+0xe6>
 738:	8c 36       	cpi	r24, 0x6C	; 108
 73a:	21 f4       	brne	.+8      	; 0x744 <vfprintf+0xe2>
 73c:	83 2d       	mov	r24, r3
 73e:	80 68       	ori	r24, 0x80	; 128
 740:	38 2e       	mov	r3, r24
 742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0xe6>
 744:	88 36       	cpi	r24, 0x68	; 104
 746:	41 f4       	brne	.+16     	; 0x758 <vfprintf+0xf6>
 748:	f7 01       	movw	r30, r14
 74a:	93 fd       	sbrc	r25, 3
 74c:	85 91       	lpm	r24, Z+
 74e:	93 ff       	sbrs	r25, 3
 750:	81 91       	ld	r24, Z+
 752:	7f 01       	movw	r14, r30
 754:	81 11       	cpse	r24, r1
 756:	b3 cf       	rjmp	.-154    	; 0x6be <vfprintf+0x5c>
 758:	98 2f       	mov	r25, r24
 75a:	9f 7d       	andi	r25, 0xDF	; 223
 75c:	95 54       	subi	r25, 0x45	; 69
 75e:	93 30       	cpi	r25, 0x03	; 3
 760:	28 f4       	brcc	.+10     	; 0x76c <vfprintf+0x10a>
 762:	0c 5f       	subi	r16, 0xFC	; 252
 764:	1f 4f       	sbci	r17, 0xFF	; 255
 766:	9f e3       	ldi	r25, 0x3F	; 63
 768:	99 83       	std	Y+1, r25	; 0x01
 76a:	0d c0       	rjmp	.+26     	; 0x786 <vfprintf+0x124>
 76c:	83 36       	cpi	r24, 0x63	; 99
 76e:	31 f0       	breq	.+12     	; 0x77c <vfprintf+0x11a>
 770:	83 37       	cpi	r24, 0x73	; 115
 772:	71 f0       	breq	.+28     	; 0x790 <vfprintf+0x12e>
 774:	83 35       	cpi	r24, 0x53	; 83
 776:	09 f0       	breq	.+2      	; 0x77a <vfprintf+0x118>
 778:	59 c0       	rjmp	.+178    	; 0x82c <vfprintf+0x1ca>
 77a:	21 c0       	rjmp	.+66     	; 0x7be <vfprintf+0x15c>
 77c:	f8 01       	movw	r30, r16
 77e:	80 81       	ld	r24, Z
 780:	89 83       	std	Y+1, r24	; 0x01
 782:	0e 5f       	subi	r16, 0xFE	; 254
 784:	1f 4f       	sbci	r17, 0xFF	; 255
 786:	88 24       	eor	r8, r8
 788:	83 94       	inc	r8
 78a:	91 2c       	mov	r9, r1
 78c:	53 01       	movw	r10, r6
 78e:	13 c0       	rjmp	.+38     	; 0x7b6 <vfprintf+0x154>
 790:	28 01       	movw	r4, r16
 792:	f2 e0       	ldi	r31, 0x02	; 2
 794:	4f 0e       	add	r4, r31
 796:	51 1c       	adc	r5, r1
 798:	f8 01       	movw	r30, r16
 79a:	a0 80       	ld	r10, Z
 79c:	b1 80       	ldd	r11, Z+1	; 0x01
 79e:	36 fe       	sbrs	r3, 6
 7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <vfprintf+0x146>
 7a2:	69 2d       	mov	r22, r9
 7a4:	70 e0       	ldi	r23, 0x00	; 0
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0x14a>
 7a8:	6f ef       	ldi	r22, 0xFF	; 255
 7aa:	7f ef       	ldi	r23, 0xFF	; 255
 7ac:	c5 01       	movw	r24, r10
 7ae:	0e 94 1d 05 	call	0xa3a	; 0xa3a <strnlen>
 7b2:	4c 01       	movw	r8, r24
 7b4:	82 01       	movw	r16, r4
 7b6:	f3 2d       	mov	r31, r3
 7b8:	ff 77       	andi	r31, 0x7F	; 127
 7ba:	3f 2e       	mov	r3, r31
 7bc:	16 c0       	rjmp	.+44     	; 0x7ea <vfprintf+0x188>
 7be:	28 01       	movw	r4, r16
 7c0:	22 e0       	ldi	r18, 0x02	; 2
 7c2:	42 0e       	add	r4, r18
 7c4:	51 1c       	adc	r5, r1
 7c6:	f8 01       	movw	r30, r16
 7c8:	a0 80       	ld	r10, Z
 7ca:	b1 80       	ldd	r11, Z+1	; 0x01
 7cc:	36 fe       	sbrs	r3, 6
 7ce:	03 c0       	rjmp	.+6      	; 0x7d6 <vfprintf+0x174>
 7d0:	69 2d       	mov	r22, r9
 7d2:	70 e0       	ldi	r23, 0x00	; 0
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0x178>
 7d6:	6f ef       	ldi	r22, 0xFF	; 255
 7d8:	7f ef       	ldi	r23, 0xFF	; 255
 7da:	c5 01       	movw	r24, r10
 7dc:	0e 94 12 05 	call	0xa24	; 0xa24 <strnlen_P>
 7e0:	4c 01       	movw	r8, r24
 7e2:	f3 2d       	mov	r31, r3
 7e4:	f0 68       	ori	r31, 0x80	; 128
 7e6:	3f 2e       	mov	r3, r31
 7e8:	82 01       	movw	r16, r4
 7ea:	33 fc       	sbrc	r3, 3
 7ec:	1b c0       	rjmp	.+54     	; 0x824 <vfprintf+0x1c2>
 7ee:	82 2d       	mov	r24, r2
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	88 16       	cp	r8, r24
 7f4:	99 06       	cpc	r9, r25
 7f6:	b0 f4       	brcc	.+44     	; 0x824 <vfprintf+0x1c2>
 7f8:	b6 01       	movw	r22, r12
 7fa:	80 e2       	ldi	r24, 0x20	; 32
 7fc:	90 e0       	ldi	r25, 0x00	; 0
 7fe:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 802:	2a 94       	dec	r2
 804:	f4 cf       	rjmp	.-24     	; 0x7ee <vfprintf+0x18c>
 806:	f5 01       	movw	r30, r10
 808:	37 fc       	sbrc	r3, 7
 80a:	85 91       	lpm	r24, Z+
 80c:	37 fe       	sbrs	r3, 7
 80e:	81 91       	ld	r24, Z+
 810:	5f 01       	movw	r10, r30
 812:	b6 01       	movw	r22, r12
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 81a:	21 10       	cpse	r2, r1
 81c:	2a 94       	dec	r2
 81e:	21 e0       	ldi	r18, 0x01	; 1
 820:	82 1a       	sub	r8, r18
 822:	91 08       	sbc	r9, r1
 824:	81 14       	cp	r8, r1
 826:	91 04       	cpc	r9, r1
 828:	71 f7       	brne	.-36     	; 0x806 <vfprintf+0x1a4>
 82a:	e8 c0       	rjmp	.+464    	; 0x9fc <__stack+0xfd>
 82c:	84 36       	cpi	r24, 0x64	; 100
 82e:	11 f0       	breq	.+4      	; 0x834 <vfprintf+0x1d2>
 830:	89 36       	cpi	r24, 0x69	; 105
 832:	41 f5       	brne	.+80     	; 0x884 <vfprintf+0x222>
 834:	f8 01       	movw	r30, r16
 836:	37 fe       	sbrs	r3, 7
 838:	07 c0       	rjmp	.+14     	; 0x848 <vfprintf+0x1e6>
 83a:	60 81       	ld	r22, Z
 83c:	71 81       	ldd	r23, Z+1	; 0x01
 83e:	82 81       	ldd	r24, Z+2	; 0x02
 840:	93 81       	ldd	r25, Z+3	; 0x03
 842:	0c 5f       	subi	r16, 0xFC	; 252
 844:	1f 4f       	sbci	r17, 0xFF	; 255
 846:	08 c0       	rjmp	.+16     	; 0x858 <vfprintf+0x1f6>
 848:	60 81       	ld	r22, Z
 84a:	71 81       	ldd	r23, Z+1	; 0x01
 84c:	07 2e       	mov	r0, r23
 84e:	00 0c       	add	r0, r0
 850:	88 0b       	sbc	r24, r24
 852:	99 0b       	sbc	r25, r25
 854:	0e 5f       	subi	r16, 0xFE	; 254
 856:	1f 4f       	sbci	r17, 0xFF	; 255
 858:	f3 2d       	mov	r31, r3
 85a:	ff 76       	andi	r31, 0x6F	; 111
 85c:	3f 2e       	mov	r3, r31
 85e:	97 ff       	sbrs	r25, 7
 860:	09 c0       	rjmp	.+18     	; 0x874 <vfprintf+0x212>
 862:	90 95       	com	r25
 864:	80 95       	com	r24
 866:	70 95       	com	r23
 868:	61 95       	neg	r22
 86a:	7f 4f       	sbci	r23, 0xFF	; 255
 86c:	8f 4f       	sbci	r24, 0xFF	; 255
 86e:	9f 4f       	sbci	r25, 0xFF	; 255
 870:	f0 68       	ori	r31, 0x80	; 128
 872:	3f 2e       	mov	r3, r31
 874:	2a e0       	ldi	r18, 0x0A	; 10
 876:	30 e0       	ldi	r19, 0x00	; 0
 878:	a3 01       	movw	r20, r6
 87a:	0e 94 64 05 	call	0xac8	; 0xac8 <__ultoa_invert>
 87e:	88 2e       	mov	r8, r24
 880:	86 18       	sub	r8, r6
 882:	45 c0       	rjmp	.+138    	; 0x90e <__stack+0xf>
 884:	85 37       	cpi	r24, 0x75	; 117
 886:	31 f4       	brne	.+12     	; 0x894 <vfprintf+0x232>
 888:	23 2d       	mov	r18, r3
 88a:	2f 7e       	andi	r18, 0xEF	; 239
 88c:	b2 2e       	mov	r11, r18
 88e:	2a e0       	ldi	r18, 0x0A	; 10
 890:	30 e0       	ldi	r19, 0x00	; 0
 892:	25 c0       	rjmp	.+74     	; 0x8de <vfprintf+0x27c>
 894:	93 2d       	mov	r25, r3
 896:	99 7f       	andi	r25, 0xF9	; 249
 898:	b9 2e       	mov	r11, r25
 89a:	8f 36       	cpi	r24, 0x6F	; 111
 89c:	c1 f0       	breq	.+48     	; 0x8ce <vfprintf+0x26c>
 89e:	18 f4       	brcc	.+6      	; 0x8a6 <vfprintf+0x244>
 8a0:	88 35       	cpi	r24, 0x58	; 88
 8a2:	79 f0       	breq	.+30     	; 0x8c2 <vfprintf+0x260>
 8a4:	b5 c0       	rjmp	.+362    	; 0xa10 <__stack+0x111>
 8a6:	80 37       	cpi	r24, 0x70	; 112
 8a8:	19 f0       	breq	.+6      	; 0x8b0 <vfprintf+0x24e>
 8aa:	88 37       	cpi	r24, 0x78	; 120
 8ac:	21 f0       	breq	.+8      	; 0x8b6 <vfprintf+0x254>
 8ae:	b0 c0       	rjmp	.+352    	; 0xa10 <__stack+0x111>
 8b0:	e9 2f       	mov	r30, r25
 8b2:	e0 61       	ori	r30, 0x10	; 16
 8b4:	be 2e       	mov	r11, r30
 8b6:	b4 fe       	sbrs	r11, 4
 8b8:	0d c0       	rjmp	.+26     	; 0x8d4 <vfprintf+0x272>
 8ba:	fb 2d       	mov	r31, r11
 8bc:	f4 60       	ori	r31, 0x04	; 4
 8be:	bf 2e       	mov	r11, r31
 8c0:	09 c0       	rjmp	.+18     	; 0x8d4 <vfprintf+0x272>
 8c2:	34 fe       	sbrs	r3, 4
 8c4:	0a c0       	rjmp	.+20     	; 0x8da <vfprintf+0x278>
 8c6:	29 2f       	mov	r18, r25
 8c8:	26 60       	ori	r18, 0x06	; 6
 8ca:	b2 2e       	mov	r11, r18
 8cc:	06 c0       	rjmp	.+12     	; 0x8da <vfprintf+0x278>
 8ce:	28 e0       	ldi	r18, 0x08	; 8
 8d0:	30 e0       	ldi	r19, 0x00	; 0
 8d2:	05 c0       	rjmp	.+10     	; 0x8de <vfprintf+0x27c>
 8d4:	20 e1       	ldi	r18, 0x10	; 16
 8d6:	30 e0       	ldi	r19, 0x00	; 0
 8d8:	02 c0       	rjmp	.+4      	; 0x8de <vfprintf+0x27c>
 8da:	20 e1       	ldi	r18, 0x10	; 16
 8dc:	32 e0       	ldi	r19, 0x02	; 2
 8de:	f8 01       	movw	r30, r16
 8e0:	b7 fe       	sbrs	r11, 7
 8e2:	07 c0       	rjmp	.+14     	; 0x8f2 <vfprintf+0x290>
 8e4:	60 81       	ld	r22, Z
 8e6:	71 81       	ldd	r23, Z+1	; 0x01
 8e8:	82 81       	ldd	r24, Z+2	; 0x02
 8ea:	93 81       	ldd	r25, Z+3	; 0x03
 8ec:	0c 5f       	subi	r16, 0xFC	; 252
 8ee:	1f 4f       	sbci	r17, 0xFF	; 255
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <vfprintf+0x29c>
 8f2:	60 81       	ld	r22, Z
 8f4:	71 81       	ldd	r23, Z+1	; 0x01
 8f6:	80 e0       	ldi	r24, 0x00	; 0
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	0e 5f       	subi	r16, 0xFE	; 254
 8fc:	1f 4f       	sbci	r17, 0xFF	; 255
 8fe:	a3 01       	movw	r20, r6
 900:	0e 94 64 05 	call	0xac8	; 0xac8 <__ultoa_invert>
 904:	88 2e       	mov	r8, r24
 906:	86 18       	sub	r8, r6
 908:	fb 2d       	mov	r31, r11
 90a:	ff 77       	andi	r31, 0x7F	; 127
 90c:	3f 2e       	mov	r3, r31
 90e:	36 fe       	sbrs	r3, 6
 910:	0d c0       	rjmp	.+26     	; 0x92c <__stack+0x2d>
 912:	23 2d       	mov	r18, r3
 914:	2e 7f       	andi	r18, 0xFE	; 254
 916:	a2 2e       	mov	r10, r18
 918:	89 14       	cp	r8, r9
 91a:	58 f4       	brcc	.+22     	; 0x932 <__stack+0x33>
 91c:	34 fe       	sbrs	r3, 4
 91e:	0b c0       	rjmp	.+22     	; 0x936 <__stack+0x37>
 920:	32 fc       	sbrc	r3, 2
 922:	09 c0       	rjmp	.+18     	; 0x936 <__stack+0x37>
 924:	83 2d       	mov	r24, r3
 926:	8e 7e       	andi	r24, 0xEE	; 238
 928:	a8 2e       	mov	r10, r24
 92a:	05 c0       	rjmp	.+10     	; 0x936 <__stack+0x37>
 92c:	b8 2c       	mov	r11, r8
 92e:	a3 2c       	mov	r10, r3
 930:	03 c0       	rjmp	.+6      	; 0x938 <__stack+0x39>
 932:	b8 2c       	mov	r11, r8
 934:	01 c0       	rjmp	.+2      	; 0x938 <__stack+0x39>
 936:	b9 2c       	mov	r11, r9
 938:	a4 fe       	sbrs	r10, 4
 93a:	0f c0       	rjmp	.+30     	; 0x95a <__stack+0x5b>
 93c:	fe 01       	movw	r30, r28
 93e:	e8 0d       	add	r30, r8
 940:	f1 1d       	adc	r31, r1
 942:	80 81       	ld	r24, Z
 944:	80 33       	cpi	r24, 0x30	; 48
 946:	21 f4       	brne	.+8      	; 0x950 <__stack+0x51>
 948:	9a 2d       	mov	r25, r10
 94a:	99 7e       	andi	r25, 0xE9	; 233
 94c:	a9 2e       	mov	r10, r25
 94e:	09 c0       	rjmp	.+18     	; 0x962 <__stack+0x63>
 950:	a2 fe       	sbrs	r10, 2
 952:	06 c0       	rjmp	.+12     	; 0x960 <__stack+0x61>
 954:	b3 94       	inc	r11
 956:	b3 94       	inc	r11
 958:	04 c0       	rjmp	.+8      	; 0x962 <__stack+0x63>
 95a:	8a 2d       	mov	r24, r10
 95c:	86 78       	andi	r24, 0x86	; 134
 95e:	09 f0       	breq	.+2      	; 0x962 <__stack+0x63>
 960:	b3 94       	inc	r11
 962:	a3 fc       	sbrc	r10, 3
 964:	11 c0       	rjmp	.+34     	; 0x988 <__stack+0x89>
 966:	a0 fe       	sbrs	r10, 0
 968:	06 c0       	rjmp	.+12     	; 0x976 <__stack+0x77>
 96a:	b2 14       	cp	r11, r2
 96c:	88 f4       	brcc	.+34     	; 0x990 <__stack+0x91>
 96e:	28 0c       	add	r2, r8
 970:	92 2c       	mov	r9, r2
 972:	9b 18       	sub	r9, r11
 974:	0e c0       	rjmp	.+28     	; 0x992 <__stack+0x93>
 976:	b2 14       	cp	r11, r2
 978:	60 f4       	brcc	.+24     	; 0x992 <__stack+0x93>
 97a:	b6 01       	movw	r22, r12
 97c:	80 e2       	ldi	r24, 0x20	; 32
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 984:	b3 94       	inc	r11
 986:	f7 cf       	rjmp	.-18     	; 0x976 <__stack+0x77>
 988:	b2 14       	cp	r11, r2
 98a:	18 f4       	brcc	.+6      	; 0x992 <__stack+0x93>
 98c:	2b 18       	sub	r2, r11
 98e:	02 c0       	rjmp	.+4      	; 0x994 <__stack+0x95>
 990:	98 2c       	mov	r9, r8
 992:	21 2c       	mov	r2, r1
 994:	a4 fe       	sbrs	r10, 4
 996:	10 c0       	rjmp	.+32     	; 0x9b8 <__stack+0xb9>
 998:	b6 01       	movw	r22, r12
 99a:	80 e3       	ldi	r24, 0x30	; 48
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9a2:	a2 fe       	sbrs	r10, 2
 9a4:	17 c0       	rjmp	.+46     	; 0x9d4 <__stack+0xd5>
 9a6:	a1 fc       	sbrc	r10, 1
 9a8:	03 c0       	rjmp	.+6      	; 0x9b0 <__stack+0xb1>
 9aa:	88 e7       	ldi	r24, 0x78	; 120
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <__stack+0xb5>
 9b0:	88 e5       	ldi	r24, 0x58	; 88
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	b6 01       	movw	r22, r12
 9b6:	0c c0       	rjmp	.+24     	; 0x9d0 <__stack+0xd1>
 9b8:	8a 2d       	mov	r24, r10
 9ba:	86 78       	andi	r24, 0x86	; 134
 9bc:	59 f0       	breq	.+22     	; 0x9d4 <__stack+0xd5>
 9be:	a1 fe       	sbrs	r10, 1
 9c0:	02 c0       	rjmp	.+4      	; 0x9c6 <__stack+0xc7>
 9c2:	8b e2       	ldi	r24, 0x2B	; 43
 9c4:	01 c0       	rjmp	.+2      	; 0x9c8 <__stack+0xc9>
 9c6:	80 e2       	ldi	r24, 0x20	; 32
 9c8:	a7 fc       	sbrc	r10, 7
 9ca:	8d e2       	ldi	r24, 0x2D	; 45
 9cc:	b6 01       	movw	r22, r12
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9d4:	89 14       	cp	r8, r9
 9d6:	38 f4       	brcc	.+14     	; 0x9e6 <__stack+0xe7>
 9d8:	b6 01       	movw	r22, r12
 9da:	80 e3       	ldi	r24, 0x30	; 48
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9e2:	9a 94       	dec	r9
 9e4:	f7 cf       	rjmp	.-18     	; 0x9d4 <__stack+0xd5>
 9e6:	8a 94       	dec	r8
 9e8:	f3 01       	movw	r30, r6
 9ea:	e8 0d       	add	r30, r8
 9ec:	f1 1d       	adc	r31, r1
 9ee:	80 81       	ld	r24, Z
 9f0:	b6 01       	movw	r22, r12
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 9f8:	81 10       	cpse	r8, r1
 9fa:	f5 cf       	rjmp	.-22     	; 0x9e6 <__stack+0xe7>
 9fc:	22 20       	and	r2, r2
 9fe:	09 f4       	brne	.+2      	; 0xa02 <__stack+0x103>
 a00:	42 ce       	rjmp	.-892    	; 0x686 <vfprintf+0x24>
 a02:	b6 01       	movw	r22, r12
 a04:	80 e2       	ldi	r24, 0x20	; 32
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	0e 94 28 05 	call	0xa50	; 0xa50 <fputc>
 a0c:	2a 94       	dec	r2
 a0e:	f6 cf       	rjmp	.-20     	; 0x9fc <__stack+0xfd>
 a10:	f6 01       	movw	r30, r12
 a12:	86 81       	ldd	r24, Z+6	; 0x06
 a14:	97 81       	ldd	r25, Z+7	; 0x07
 a16:	02 c0       	rjmp	.+4      	; 0xa1c <__stack+0x11d>
 a18:	8f ef       	ldi	r24, 0xFF	; 255
 a1a:	9f ef       	ldi	r25, 0xFF	; 255
 a1c:	2b 96       	adiw	r28, 0x0b	; 11
 a1e:	e2 e1       	ldi	r30, 0x12	; 18
 a20:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__epilogue_restores__>

00000a24 <strnlen_P>:
 a24:	fc 01       	movw	r30, r24
 a26:	05 90       	lpm	r0, Z+
 a28:	61 50       	subi	r22, 0x01	; 1
 a2a:	70 40       	sbci	r23, 0x00	; 0
 a2c:	01 10       	cpse	r0, r1
 a2e:	d8 f7       	brcc	.-10     	; 0xa26 <strnlen_P+0x2>
 a30:	80 95       	com	r24
 a32:	90 95       	com	r25
 a34:	8e 0f       	add	r24, r30
 a36:	9f 1f       	adc	r25, r31
 a38:	08 95       	ret

00000a3a <strnlen>:
 a3a:	fc 01       	movw	r30, r24
 a3c:	61 50       	subi	r22, 0x01	; 1
 a3e:	70 40       	sbci	r23, 0x00	; 0
 a40:	01 90       	ld	r0, Z+
 a42:	01 10       	cpse	r0, r1
 a44:	d8 f7       	brcc	.-10     	; 0xa3c <strnlen+0x2>
 a46:	80 95       	com	r24
 a48:	90 95       	com	r25
 a4a:	8e 0f       	add	r24, r30
 a4c:	9f 1f       	adc	r25, r31
 a4e:	08 95       	ret

00000a50 <fputc>:
 a50:	0f 93       	push	r16
 a52:	1f 93       	push	r17
 a54:	cf 93       	push	r28
 a56:	df 93       	push	r29
 a58:	fb 01       	movw	r30, r22
 a5a:	23 81       	ldd	r18, Z+3	; 0x03
 a5c:	21 fd       	sbrc	r18, 1
 a5e:	03 c0       	rjmp	.+6      	; 0xa66 <fputc+0x16>
 a60:	8f ef       	ldi	r24, 0xFF	; 255
 a62:	9f ef       	ldi	r25, 0xFF	; 255
 a64:	2c c0       	rjmp	.+88     	; 0xabe <fputc+0x6e>
 a66:	22 ff       	sbrs	r18, 2
 a68:	16 c0       	rjmp	.+44     	; 0xa96 <fputc+0x46>
 a6a:	46 81       	ldd	r20, Z+6	; 0x06
 a6c:	57 81       	ldd	r21, Z+7	; 0x07
 a6e:	24 81       	ldd	r18, Z+4	; 0x04
 a70:	35 81       	ldd	r19, Z+5	; 0x05
 a72:	42 17       	cp	r20, r18
 a74:	53 07       	cpc	r21, r19
 a76:	44 f4       	brge	.+16     	; 0xa88 <fputc+0x38>
 a78:	a0 81       	ld	r26, Z
 a7a:	b1 81       	ldd	r27, Z+1	; 0x01
 a7c:	9d 01       	movw	r18, r26
 a7e:	2f 5f       	subi	r18, 0xFF	; 255
 a80:	3f 4f       	sbci	r19, 0xFF	; 255
 a82:	31 83       	std	Z+1, r19	; 0x01
 a84:	20 83       	st	Z, r18
 a86:	8c 93       	st	X, r24
 a88:	26 81       	ldd	r18, Z+6	; 0x06
 a8a:	37 81       	ldd	r19, Z+7	; 0x07
 a8c:	2f 5f       	subi	r18, 0xFF	; 255
 a8e:	3f 4f       	sbci	r19, 0xFF	; 255
 a90:	37 83       	std	Z+7, r19	; 0x07
 a92:	26 83       	std	Z+6, r18	; 0x06
 a94:	14 c0       	rjmp	.+40     	; 0xabe <fputc+0x6e>
 a96:	8b 01       	movw	r16, r22
 a98:	ec 01       	movw	r28, r24
 a9a:	fb 01       	movw	r30, r22
 a9c:	00 84       	ldd	r0, Z+8	; 0x08
 a9e:	f1 85       	ldd	r31, Z+9	; 0x09
 aa0:	e0 2d       	mov	r30, r0
 aa2:	09 95       	icall
 aa4:	89 2b       	or	r24, r25
 aa6:	e1 f6       	brne	.-72     	; 0xa60 <fputc+0x10>
 aa8:	d8 01       	movw	r26, r16
 aaa:	16 96       	adiw	r26, 0x06	; 6
 aac:	8d 91       	ld	r24, X+
 aae:	9c 91       	ld	r25, X
 ab0:	17 97       	sbiw	r26, 0x07	; 7
 ab2:	01 96       	adiw	r24, 0x01	; 1
 ab4:	17 96       	adiw	r26, 0x07	; 7
 ab6:	9c 93       	st	X, r25
 ab8:	8e 93       	st	-X, r24
 aba:	16 97       	sbiw	r26, 0x06	; 6
 abc:	ce 01       	movw	r24, r28
 abe:	df 91       	pop	r29
 ac0:	cf 91       	pop	r28
 ac2:	1f 91       	pop	r17
 ac4:	0f 91       	pop	r16
 ac6:	08 95       	ret

00000ac8 <__ultoa_invert>:
 ac8:	fa 01       	movw	r30, r20
 aca:	aa 27       	eor	r26, r26
 acc:	28 30       	cpi	r18, 0x08	; 8
 ace:	51 f1       	breq	.+84     	; 0xb24 <__ultoa_invert+0x5c>
 ad0:	20 31       	cpi	r18, 0x10	; 16
 ad2:	81 f1       	breq	.+96     	; 0xb34 <__ultoa_invert+0x6c>
 ad4:	e8 94       	clt
 ad6:	6f 93       	push	r22
 ad8:	6e 7f       	andi	r22, 0xFE	; 254
 ada:	6e 5f       	subi	r22, 0xFE	; 254
 adc:	7f 4f       	sbci	r23, 0xFF	; 255
 ade:	8f 4f       	sbci	r24, 0xFF	; 255
 ae0:	9f 4f       	sbci	r25, 0xFF	; 255
 ae2:	af 4f       	sbci	r26, 0xFF	; 255
 ae4:	b1 e0       	ldi	r27, 0x01	; 1
 ae6:	3e d0       	rcall	.+124    	; 0xb64 <__ultoa_invert+0x9c>
 ae8:	b4 e0       	ldi	r27, 0x04	; 4
 aea:	3c d0       	rcall	.+120    	; 0xb64 <__ultoa_invert+0x9c>
 aec:	67 0f       	add	r22, r23
 aee:	78 1f       	adc	r23, r24
 af0:	89 1f       	adc	r24, r25
 af2:	9a 1f       	adc	r25, r26
 af4:	a1 1d       	adc	r26, r1
 af6:	68 0f       	add	r22, r24
 af8:	79 1f       	adc	r23, r25
 afa:	8a 1f       	adc	r24, r26
 afc:	91 1d       	adc	r25, r1
 afe:	a1 1d       	adc	r26, r1
 b00:	6a 0f       	add	r22, r26
 b02:	71 1d       	adc	r23, r1
 b04:	81 1d       	adc	r24, r1
 b06:	91 1d       	adc	r25, r1
 b08:	a1 1d       	adc	r26, r1
 b0a:	20 d0       	rcall	.+64     	; 0xb4c <__ultoa_invert+0x84>
 b0c:	09 f4       	brne	.+2      	; 0xb10 <__ultoa_invert+0x48>
 b0e:	68 94       	set
 b10:	3f 91       	pop	r19
 b12:	2a e0       	ldi	r18, 0x0A	; 10
 b14:	26 9f       	mul	r18, r22
 b16:	11 24       	eor	r1, r1
 b18:	30 19       	sub	r19, r0
 b1a:	30 5d       	subi	r19, 0xD0	; 208
 b1c:	31 93       	st	Z+, r19
 b1e:	de f6       	brtc	.-74     	; 0xad6 <__ultoa_invert+0xe>
 b20:	cf 01       	movw	r24, r30
 b22:	08 95       	ret
 b24:	46 2f       	mov	r20, r22
 b26:	47 70       	andi	r20, 0x07	; 7
 b28:	40 5d       	subi	r20, 0xD0	; 208
 b2a:	41 93       	st	Z+, r20
 b2c:	b3 e0       	ldi	r27, 0x03	; 3
 b2e:	0f d0       	rcall	.+30     	; 0xb4e <__ultoa_invert+0x86>
 b30:	c9 f7       	brne	.-14     	; 0xb24 <__ultoa_invert+0x5c>
 b32:	f6 cf       	rjmp	.-20     	; 0xb20 <__ultoa_invert+0x58>
 b34:	46 2f       	mov	r20, r22
 b36:	4f 70       	andi	r20, 0x0F	; 15
 b38:	40 5d       	subi	r20, 0xD0	; 208
 b3a:	4a 33       	cpi	r20, 0x3A	; 58
 b3c:	18 f0       	brcs	.+6      	; 0xb44 <__ultoa_invert+0x7c>
 b3e:	49 5d       	subi	r20, 0xD9	; 217
 b40:	31 fd       	sbrc	r19, 1
 b42:	40 52       	subi	r20, 0x20	; 32
 b44:	41 93       	st	Z+, r20
 b46:	02 d0       	rcall	.+4      	; 0xb4c <__ultoa_invert+0x84>
 b48:	a9 f7       	brne	.-22     	; 0xb34 <__ultoa_invert+0x6c>
 b4a:	ea cf       	rjmp	.-44     	; 0xb20 <__ultoa_invert+0x58>
 b4c:	b4 e0       	ldi	r27, 0x04	; 4
 b4e:	a6 95       	lsr	r26
 b50:	97 95       	ror	r25
 b52:	87 95       	ror	r24
 b54:	77 95       	ror	r23
 b56:	67 95       	ror	r22
 b58:	ba 95       	dec	r27
 b5a:	c9 f7       	brne	.-14     	; 0xb4e <__ultoa_invert+0x86>
 b5c:	00 97       	sbiw	r24, 0x00	; 0
 b5e:	61 05       	cpc	r22, r1
 b60:	71 05       	cpc	r23, r1
 b62:	08 95       	ret
 b64:	9b 01       	movw	r18, r22
 b66:	ac 01       	movw	r20, r24
 b68:	0a 2e       	mov	r0, r26
 b6a:	06 94       	lsr	r0
 b6c:	57 95       	ror	r21
 b6e:	47 95       	ror	r20
 b70:	37 95       	ror	r19
 b72:	27 95       	ror	r18
 b74:	ba 95       	dec	r27
 b76:	c9 f7       	brne	.-14     	; 0xb6a <__ultoa_invert+0xa2>
 b78:	62 0f       	add	r22, r18
 b7a:	73 1f       	adc	r23, r19
 b7c:	84 1f       	adc	r24, r20
 b7e:	95 1f       	adc	r25, r21
 b80:	a0 1d       	adc	r26, r0
 b82:	08 95       	ret

00000b84 <eeprom_read_byte>:
 b84:	f9 99       	sbic	0x1f, 1	; 31
 b86:	fe cf       	rjmp	.-4      	; 0xb84 <eeprom_read_byte>
 b88:	92 bd       	out	0x22, r25	; 34
 b8a:	81 bd       	out	0x21, r24	; 33
 b8c:	f8 9a       	sbi	0x1f, 0	; 31
 b8e:	99 27       	eor	r25, r25
 b90:	80 b5       	in	r24, 0x20	; 32
 b92:	08 95       	ret

00000b94 <eeprom_write_byte>:
 b94:	26 2f       	mov	r18, r22

00000b96 <eeprom_write_r18>:
 b96:	f9 99       	sbic	0x1f, 1	; 31
 b98:	fe cf       	rjmp	.-4      	; 0xb96 <eeprom_write_r18>
 b9a:	1f ba       	out	0x1f, r1	; 31
 b9c:	92 bd       	out	0x22, r25	; 34
 b9e:	81 bd       	out	0x21, r24	; 33
 ba0:	20 bd       	out	0x20, r18	; 32
 ba2:	0f b6       	in	r0, 0x3f	; 63
 ba4:	f8 94       	cli
 ba6:	fa 9a       	sbi	0x1f, 2	; 31
 ba8:	f9 9a       	sbi	0x1f, 1	; 31
 baa:	0f be       	out	0x3f, r0	; 63
 bac:	01 96       	adiw	r24, 0x01	; 1
 bae:	08 95       	ret

00000bb0 <__prologue_saves__>:
 bb0:	2f 92       	push	r2
 bb2:	3f 92       	push	r3
 bb4:	4f 92       	push	r4
 bb6:	5f 92       	push	r5
 bb8:	6f 92       	push	r6
 bba:	7f 92       	push	r7
 bbc:	8f 92       	push	r8
 bbe:	9f 92       	push	r9
 bc0:	af 92       	push	r10
 bc2:	bf 92       	push	r11
 bc4:	cf 92       	push	r12
 bc6:	df 92       	push	r13
 bc8:	ef 92       	push	r14
 bca:	ff 92       	push	r15
 bcc:	0f 93       	push	r16
 bce:	1f 93       	push	r17
 bd0:	cf 93       	push	r28
 bd2:	df 93       	push	r29
 bd4:	cd b7       	in	r28, 0x3d	; 61
 bd6:	de b7       	in	r29, 0x3e	; 62
 bd8:	ca 1b       	sub	r28, r26
 bda:	db 0b       	sbc	r29, r27
 bdc:	0f b6       	in	r0, 0x3f	; 63
 bde:	f8 94       	cli
 be0:	de bf       	out	0x3e, r29	; 62
 be2:	0f be       	out	0x3f, r0	; 63
 be4:	cd bf       	out	0x3d, r28	; 61
 be6:	09 94       	ijmp

00000be8 <__epilogue_restores__>:
 be8:	2a 88       	ldd	r2, Y+18	; 0x12
 bea:	39 88       	ldd	r3, Y+17	; 0x11
 bec:	48 88       	ldd	r4, Y+16	; 0x10
 bee:	5f 84       	ldd	r5, Y+15	; 0x0f
 bf0:	6e 84       	ldd	r6, Y+14	; 0x0e
 bf2:	7d 84       	ldd	r7, Y+13	; 0x0d
 bf4:	8c 84       	ldd	r8, Y+12	; 0x0c
 bf6:	9b 84       	ldd	r9, Y+11	; 0x0b
 bf8:	aa 84       	ldd	r10, Y+10	; 0x0a
 bfa:	b9 84       	ldd	r11, Y+9	; 0x09
 bfc:	c8 84       	ldd	r12, Y+8	; 0x08
 bfe:	df 80       	ldd	r13, Y+7	; 0x07
 c00:	ee 80       	ldd	r14, Y+6	; 0x06
 c02:	fd 80       	ldd	r15, Y+5	; 0x05
 c04:	0c 81       	ldd	r16, Y+4	; 0x04
 c06:	1b 81       	ldd	r17, Y+3	; 0x03
 c08:	aa 81       	ldd	r26, Y+2	; 0x02
 c0a:	b9 81       	ldd	r27, Y+1	; 0x01
 c0c:	ce 0f       	add	r28, r30
 c0e:	d1 1d       	adc	r29, r1
 c10:	0f b6       	in	r0, 0x3f	; 63
 c12:	f8 94       	cli
 c14:	de bf       	out	0x3e, r29	; 62
 c16:	0f be       	out	0x3f, r0	; 63
 c18:	cd bf       	out	0x3d, r28	; 61
 c1a:	ed 01       	movw	r28, r26
 c1c:	08 95       	ret

00000c1e <_exit>:
 c1e:	f8 94       	cli

00000c20 <__stop_program>:
 c20:	ff cf       	rjmp	.-2      	; 0xc20 <__stop_program>
