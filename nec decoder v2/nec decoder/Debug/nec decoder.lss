
nec decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000a2a  00000abe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a2a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800134  00800134  00000af2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000af2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009d5  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000785  00000000  00000000  000015ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000463  00000000  00000000  00001d32  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d8  00000000  00000000  00002198  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050f  00000000  00000000  00002270  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001cf  00000000  00000000  0000277f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  0000294e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e2       	ldi	r30, 0x2A	; 42
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 33       	cpi	r26, 0x34	; 52
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e3       	ldi	r26, 0x34	; 52
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 34       	cpi	r26, 0x41	; 65
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 04 02 	call	0x408	; 0x408 <main>
  9e:	0c 94 13 05 	jmp	0xa26	; 0xa26 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
}

void IR_DeInitialize()
{
	TCCR1B = 0;
	TIMSK1 = 0;
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <IR_Initialize>:
  ca:	82 e8       	ldi	r24, 0x82	; 130
  cc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
  d0:	81 e2       	ldi	r24, 0x21	; 33
  d2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
  d6:	08 95       	ret

000000d8 <__vector_10>:
}

ISR (TIMER1_CAPT_vect)
{
  d8:	1f 92       	push	r1
  da:	0f 92       	push	r0
  dc:	0f b6       	in	r0, 0x3f	; 63
  de:	0f 92       	push	r0
  e0:	11 24       	eor	r1, r1
  e2:	2f 93       	push	r18
  e4:	3f 93       	push	r19
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	ef 93       	push	r30
  ec:	ff 93       	push	r31
	TCNT1 = 0;
  ee:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
  f2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	nec_current_state++;
  f6:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
  fa:	8f 5f       	subi	r24, 0xFF	; 255
  fc:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <nec_current_state>
	repeat_timer = 0;
 100:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <__data_end>
	
	if (nec_current_state == 2)
 104:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 108:	82 30       	cpi	r24, 0x02	; 2
 10a:	a9 f4       	brne	.+42     	; 0x136 <__vector_10+0x5e>
	{
		if (!(ICR1 <= IR_START_TIME_H && ICR1 >= IR_START_TIME_L))
 10c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 110:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 114:	81 33       	cpi	r24, 0x31	; 49
 116:	95 47       	sbci	r25, 0x75	; 117
 118:	40 f4       	brcc	.+16     	; 0x12a <__vector_10+0x52>
 11a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 11e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 122:	88 3a       	cpi	r24, 0xA8	; 168
 124:	91 46       	sbci	r25, 0x61	; 97
 126:	08 f0       	brcs	.+2      	; 0x12a <__vector_10+0x52>
 128:	4a c1       	rjmp	.+660    	; 0x3be <__vector_10+0x2e6>
		{
			nec_current_state = 0;
 12a:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <nec_current_state>
			nec_current_status = TIMING_ERR;
 12e:	83 e0       	ldi	r24, 0x03	; 3
 130:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 134:	44 c1       	rjmp	.+648    	; 0x3be <__vector_10+0x2e6>
		}
	}
	else if (nec_current_state <= 34 && nec_current_state >=  3)
 136:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 13a:	83 32       	cpi	r24, 0x23	; 35
 13c:	08 f0       	brcs	.+2      	; 0x140 <__vector_10+0x68>
 13e:	cb c0       	rjmp	.+406    	; 0x2d6 <__vector_10+0x1fe>
 140:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 144:	83 30       	cpi	r24, 0x03	; 3
 146:	08 f4       	brcc	.+2      	; 0x14a <__vector_10+0x72>
 148:	c6 c0       	rjmp	.+396    	; 0x2d6 <__vector_10+0x1fe>
	{
		if (ICR1 <= IR_HIGH_TIME_H && ICR1 >= IR_HIGH_TIME_L)
 14a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 14e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 152:	81 3c       	cpi	r24, 0xC1	; 193
 154:	92 41       	sbci	r25, 0x12	; 18
 156:	08 f0       	brcs	.+2      	; 0x15a <__vector_10+0x82>
 158:	54 c0       	rjmp	.+168    	; 0x202 <__vector_10+0x12a>
 15a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 15e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 162:	80 3a       	cpi	r24, 0xA0	; 160
 164:	9f 40       	sbci	r25, 0x0F	; 15
 166:	08 f4       	brcc	.+2      	; 0x16a <__vector_10+0x92>
 168:	4c c0       	rjmp	.+152    	; 0x202 <__vector_10+0x12a>
		{
			if (nec_current_state <= 10)
 16a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 16e:	8b 30       	cpi	r24, 0x0B	; 11
 170:	80 f4       	brcc	.+32     	; 0x192 <__vector_10+0xba>
				nec_current_packet.addr_l |= (1 << (nec_current_state - 3));	
 172:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 176:	e7 e3       	ldi	r30, 0x37	; 55
 178:	f1 e0       	ldi	r31, 0x01	; 1
 17a:	30 81       	ld	r19, Z
 17c:	23 50       	subi	r18, 0x03	; 3
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	02 c0       	rjmp	.+4      	; 0x188 <__vector_10+0xb0>
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	2a 95       	dec	r18
 18a:	e2 f7       	brpl	.-8      	; 0x184 <__vector_10+0xac>
 18c:	83 2b       	or	r24, r19
 18e:	80 83       	st	Z, r24
 190:	16 c1       	rjmp	.+556    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 18)
 192:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 196:	83 31       	cpi	r24, 0x13	; 19
 198:	80 f4       	brcc	.+32     	; 0x1ba <__vector_10+0xe2>
				nec_current_packet.addr_h |= (1 << (nec_current_state - 11));
 19a:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 19e:	e7 e3       	ldi	r30, 0x37	; 55
 1a0:	f1 e0       	ldi	r31, 0x01	; 1
 1a2:	31 81       	ldd	r19, Z+1	; 0x01
 1a4:	2b 50       	subi	r18, 0x0B	; 11
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <__vector_10+0xd8>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	2a 95       	dec	r18
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <__vector_10+0xd4>
 1b4:	83 2b       	or	r24, r19
 1b6:	81 83       	std	Z+1, r24	; 0x01
 1b8:	02 c1       	rjmp	.+516    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 26)
 1ba:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 1be:	8b 31       	cpi	r24, 0x1B	; 27
 1c0:	80 f4       	brcc	.+32     	; 0x1e2 <__vector_10+0x10a>
				nec_current_packet.cmd |= (1 << (nec_current_state  - 19));
 1c2:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 1c6:	e7 e3       	ldi	r30, 0x37	; 55
 1c8:	f1 e0       	ldi	r31, 0x01	; 1
 1ca:	32 81       	ldd	r19, Z+2	; 0x02
 1cc:	23 51       	subi	r18, 0x13	; 19
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <__vector_10+0x100>
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	2a 95       	dec	r18
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <__vector_10+0xfc>
 1dc:	83 2b       	or	r24, r19
 1de:	82 83       	std	Z+2, r24	; 0x02
 1e0:	ee c0       	rjmp	.+476    	; 0x3be <__vector_10+0x2e6>
			else 
				nec_current_packet.cmd_inv |= (1 << (nec_current_state - 27));
 1e2:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 1e6:	e7 e3       	ldi	r30, 0x37	; 55
 1e8:	f1 e0       	ldi	r31, 0x01	; 1
 1ea:	33 81       	ldd	r19, Z+3	; 0x03
 1ec:	2b 51       	subi	r18, 0x1B	; 27
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <__vector_10+0x120>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	2a 95       	dec	r18
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <__vector_10+0x11c>
 1fc:	83 2b       	or	r24, r19
 1fe:	83 83       	std	Z+3, r24	; 0x03
 200:	de c0       	rjmp	.+444    	; 0x3be <__vector_10+0x2e6>
		}
		else if (ICR1 <= IR_LOW_TIME_H && ICR1 >= IR_LOW_TIME_L)
 202:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 206:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 20a:	81 36       	cpi	r24, 0x61	; 97
 20c:	99 40       	sbci	r25, 0x09	; 9
 20e:	08 f0       	brcs	.+2      	; 0x212 <__vector_10+0x13a>
 210:	5c c0       	rjmp	.+184    	; 0x2ca <__vector_10+0x1f2>
 212:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 216:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 21a:	88 30       	cpi	r24, 0x08	; 8
 21c:	97 40       	sbci	r25, 0x07	; 7
 21e:	08 f4       	brcc	.+2      	; 0x222 <__vector_10+0x14a>
 220:	54 c0       	rjmp	.+168    	; 0x2ca <__vector_10+0x1f2>
		{
			if (nec_current_state <= 10)
 222:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 226:	8b 30       	cpi	r24, 0x0B	; 11
 228:	90 f4       	brcc	.+36     	; 0x24e <__vector_10+0x176>
				nec_current_packet.addr_l &= ~(1 << (nec_current_state - 3));
 22a:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 22e:	e7 e3       	ldi	r30, 0x37	; 55
 230:	f1 e0       	ldi	r31, 0x01	; 1
 232:	30 81       	ld	r19, Z
 234:	23 50       	subi	r18, 0x03	; 3
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	02 c0       	rjmp	.+4      	; 0x240 <__vector_10+0x168>
 23c:	88 0f       	add	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	2a 95       	dec	r18
 242:	e2 f7       	brpl	.-8      	; 0x23c <__vector_10+0x164>
 244:	80 95       	com	r24
 246:	90 95       	com	r25
 248:	83 23       	and	r24, r19
 24a:	80 83       	st	Z, r24
 24c:	b8 c0       	rjmp	.+368    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 18)
 24e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 252:	83 31       	cpi	r24, 0x13	; 19
 254:	90 f4       	brcc	.+36     	; 0x27a <__vector_10+0x1a2>
				nec_current_packet.addr_h &= ~(1 << (nec_current_state - 11));
 256:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 25a:	e7 e3       	ldi	r30, 0x37	; 55
 25c:	f1 e0       	ldi	r31, 0x01	; 1
 25e:	31 81       	ldd	r19, Z+1	; 0x01
 260:	2b 50       	subi	r18, 0x0B	; 11
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <__vector_10+0x194>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	2a 95       	dec	r18
 26e:	e2 f7       	brpl	.-8      	; 0x268 <__vector_10+0x190>
 270:	80 95       	com	r24
 272:	90 95       	com	r25
 274:	83 23       	and	r24, r19
 276:	81 83       	std	Z+1, r24	; 0x01
 278:	a2 c0       	rjmp	.+324    	; 0x3be <__vector_10+0x2e6>
			else if (nec_current_state <= 26)
 27a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 27e:	8b 31       	cpi	r24, 0x1B	; 27
 280:	90 f4       	brcc	.+36     	; 0x2a6 <__vector_10+0x1ce>
				nec_current_packet.cmd &= ~(1 << (nec_current_state - 19));
 282:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 286:	e7 e3       	ldi	r30, 0x37	; 55
 288:	f1 e0       	ldi	r31, 0x01	; 1
 28a:	32 81       	ldd	r19, Z+2	; 0x02
 28c:	23 51       	subi	r18, 0x13	; 19
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <__vector_10+0x1c0>
 294:	88 0f       	add	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	2a 95       	dec	r18
 29a:	e2 f7       	brpl	.-8      	; 0x294 <__vector_10+0x1bc>
 29c:	80 95       	com	r24
 29e:	90 95       	com	r25
 2a0:	83 23       	and	r24, r19
 2a2:	82 83       	std	Z+2, r24	; 0x02
 2a4:	8c c0       	rjmp	.+280    	; 0x3be <__vector_10+0x2e6>
			else
				nec_current_packet.cmd_inv &= ~(1 << (nec_current_state - 27));
 2a6:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <nec_current_state>
 2aa:	e7 e3       	ldi	r30, 0x37	; 55
 2ac:	f1 e0       	ldi	r31, 0x01	; 1
 2ae:	33 81       	ldd	r19, Z+3	; 0x03
 2b0:	2b 51       	subi	r18, 0x1B	; 27
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <__vector_10+0x1e4>
 2b8:	88 0f       	add	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	2a 95       	dec	r18
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <__vector_10+0x1e0>
 2c0:	80 95       	com	r24
 2c2:	90 95       	com	r25
 2c4:	83 23       	and	r24, r19
 2c6:	83 83       	std	Z+3, r24	; 0x03
 2c8:	7a c0       	rjmp	.+244    	; 0x3be <__vector_10+0x2e6>
		}
		else
		{
			nec_current_state = 0;
 2ca:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <nec_current_state>
			nec_current_status = TIMING_ERR;
 2ce:	83 e0       	ldi	r24, 0x03	; 3
 2d0:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 2d4:	74 c0       	rjmp	.+232    	; 0x3be <__vector_10+0x2e6>
		}
	}
	else if (nec_current_state == 35)
 2d6:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 2da:	83 32       	cpi	r24, 0x23	; 35
 2dc:	a9 f4       	brne	.+42     	; 0x308 <__vector_10+0x230>
	{
		if (nec_current_packet.cmd == (unsigned char)~(nec_current_packet.cmd_inv))
 2de:	e7 e3       	ldi	r30, 0x37	; 55
 2e0:	f1 e0       	ldi	r31, 0x01	; 1
 2e2:	92 81       	ldd	r25, Z+2	; 0x02
 2e4:	83 81       	ldd	r24, Z+3	; 0x03
 2e6:	80 95       	com	r24
 2e8:	98 13       	cpse	r25, r24
 2ea:	08 c0       	rjmp	.+16     	; 0x2fc <__vector_10+0x224>
		{
			nec_current_status = PACKET_RECVD;
 2ec:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <nec_current_status>
			nec_data_counter++;
 2f0:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <nec_data_counter>
 2f4:	8f 5f       	subi	r24, 0xFF	; 255
 2f6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <nec_data_counter>
 2fa:	61 c0       	rjmp	.+194    	; 0x3be <__vector_10+0x2e6>
		}
		else
		{
			nec_current_state = 0;
 2fc:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <nec_current_state>
			nec_current_status = CHKSM_ERR;
 300:	84 e0       	ldi	r24, 0x04	; 4
 302:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 306:	5b c0       	rjmp	.+182    	; 0x3be <__vector_10+0x2e6>
		}	
	}
	else if (nec_current_state == 36)
 308:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 30c:	84 32       	cpi	r24, 0x24	; 36
 30e:	39 f5       	brne	.+78     	; 0x35e <__vector_10+0x286>
	{
		if (!(ICR1 <= IR_REPEAT1_TIME_H && ICR1 >= IR_REPEAT1_TIME_L))
 310:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 314:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 318:	81 3c       	cpi	r24, 0xC1	; 193
 31a:	9d 45       	sbci	r25, 0x5D	; 93
 31c:	40 f4       	brcc	.+16     	; 0x32e <__vector_10+0x256>
 31e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 322:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 326:	80 32       	cpi	r24, 0x20	; 32
 328:	9e 44       	sbci	r25, 0x4E	; 78
 32a:	08 f0       	brcs	.+2      	; 0x32e <__vector_10+0x256>
 32c:	48 c0       	rjmp	.+144    	; 0x3be <__vector_10+0x2e6>
		{
			if (ICR1 <= IR_START_TIME_H && ICR1 >= IR_START_TIME_L)
 32e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 332:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 336:	81 33       	cpi	r24, 0x31	; 49
 338:	95 47       	sbci	r25, 0x75	; 117
 33a:	58 f4       	brcc	.+22     	; 0x352 <__vector_10+0x27a>
 33c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 340:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 344:	88 3a       	cpi	r24, 0xA8	; 168
 346:	91 46       	sbci	r25, 0x61	; 97
 348:	20 f0       	brcs	.+8      	; 0x352 <__vector_10+0x27a>
			{
				nec_current_state = 2;
 34a:	82 e0       	ldi	r24, 0x02	; 2
 34c:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <nec_current_state>
 350:	36 c0       	rjmp	.+108    	; 0x3be <__vector_10+0x2e6>
			}
			else
			{
				nec_current_state = 0;
 352:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <nec_current_state>
				nec_current_status = TIMING_ERR;
 356:	83 e0       	ldi	r24, 0x03	; 3
 358:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 35c:	30 c0       	rjmp	.+96     	; 0x3be <__vector_10+0x2e6>
			}
		}
	}
	else if (nec_current_state == 37)
 35e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <nec_current_state>
 362:	85 32       	cpi	r24, 0x25	; 37
 364:	61 f5       	brne	.+88     	; 0x3be <__vector_10+0x2e6>
	{	
		if (ICR1 <= IR_REPEAT2_TIME_H && ICR1 >= IR_REPEAT2_TIME_L)
 366:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 36a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 36e:	89 3e       	cpi	r24, 0xE9	; 233
 370:	9d 4f       	sbci	r25, 0xFD	; 253
 372:	70 f4       	brcc	.+28     	; 0x390 <__vector_10+0x2b8>
 374:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 378:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 37c:	80 33       	cpi	r24, 0x30	; 48
 37e:	92 4f       	sbci	r25, 0xF2	; 242
 380:	38 f0       	brcs	.+14     	; 0x390 <__vector_10+0x2b8>
		{
			nec_current_state = 35;
 382:	83 e2       	ldi	r24, 0x23	; 35
 384:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <nec_current_state>
			nec_current_status = PACKET_RECVD_N_REPEAT_RECVNG;	
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
 38e:	17 c0       	rjmp	.+46     	; 0x3be <__vector_10+0x2e6>
		}
		else if (ICR1 <= IR_START_TIME_H && ICR1 >= IR_START_TIME_L)
 390:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 394:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 398:	81 33       	cpi	r24, 0x31	; 49
 39a:	95 47       	sbci	r25, 0x75	; 117
 39c:	58 f4       	brcc	.+22     	; 0x3b4 <__vector_10+0x2dc>
 39e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
 3a2:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 3a6:	88 3a       	cpi	r24, 0xA8	; 168
 3a8:	91 46       	sbci	r25, 0x61	; 97
 3aa:	20 f0       	brcs	.+8      	; 0x3b4 <__vector_10+0x2dc>
		{
			nec_current_state = 2;
 3ac:	82 e0       	ldi	r24, 0x02	; 2
 3ae:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <nec_current_state>
 3b2:	05 c0       	rjmp	.+10     	; 0x3be <__vector_10+0x2e6>
		}
		else
		{
			nec_current_state = 0;
 3b4:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <nec_current_state>
			nec_current_status = TIMING_ERR;
 3b8:	83 e0       	ldi	r24, 0x03	; 3
 3ba:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
		}
	}
}
 3be:	ff 91       	pop	r31
 3c0:	ef 91       	pop	r30
 3c2:	9f 91       	pop	r25
 3c4:	8f 91       	pop	r24
 3c6:	3f 91       	pop	r19
 3c8:	2f 91       	pop	r18
 3ca:	0f 90       	pop	r0
 3cc:	0f be       	out	0x3f, r0	; 63
 3ce:	0f 90       	pop	r0
 3d0:	1f 90       	pop	r1
 3d2:	18 95       	reti

000003d4 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
 3d4:	1f 92       	push	r1
 3d6:	0f 92       	push	r0
 3d8:	0f b6       	in	r0, 0x3f	; 63
 3da:	0f 92       	push	r0
 3dc:	11 24       	eor	r1, r1
 3de:	8f 93       	push	r24
	repeat_timer++;
 3e0:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 3e4:	8f 5f       	subi	r24, 0xFF	; 255
 3e6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
	if (repeat_timer == 5)
 3ea:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 3ee:	85 30       	cpi	r24, 0x05	; 5
 3f0:	29 f4       	brne	.+10     	; 0x3fc <__vector_13+0x28>
	{
		nec_current_state = 0;
 3f2:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <nec_current_state>
		nec_current_status = IDLE;
 3f6:	82 e0       	ldi	r24, 0x02	; 2
 3f8:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <nec_current_status>
	}
 3fc:	8f 91       	pop	r24
 3fe:	0f 90       	pop	r0
 400:	0f be       	out	0x3f, r0	; 63
 402:	0f 90       	pop	r0
 404:	1f 90       	pop	r1
 406:	18 95       	reti

00000408 <main>:

#include "uart.h"

inline void UART_Initialize()
{
	UBRR0H = (uint8_t) (UBBR_VALUE >> 8);
 408:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (uint8_t) UBBR_VALUE;
 40c:	80 e1       	ldi	r24, 0x10	; 16
 40e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 412:	88 e1       	ldi	r24, 0x18	; 24
 414:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1 << UPM01) | (1 << UCSZ01) | (1 << UCSZ00) | (1 << USBS0); 
 418:	8e e2       	ldi	r24, 0x2E	; 46
 41a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>

int main(void)
{
	
	UART_Initialize();
	stdout = &mystdout;
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	91 e0       	ldi	r25, 0x01	; 1
 422:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <__iob+0x3>
 426:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <__iob+0x2>
	
	IR_Initialize();
 42a:	0e 94 65 00 	call	0xca	; 0xca <IR_Initialize>
	
	sei();
 42e:	78 94       	sei
	
	while (1)
	{
		printf("addrl=%u addrh=%u cmd=%u cmdinv=%u\n",nec_current_packet.addr_h,nec_current_packet.addr_l,nec_current_packet.cmd,nec_current_packet.cmd_inv);
 430:	c7 e3       	ldi	r28, 0x37	; 55
 432:	d1 e0       	ldi	r29, 0x01	; 1
 434:	0f e0       	ldi	r16, 0x0F	; 15
 436:	11 e0       	ldi	r17, 0x01	; 1
 438:	3b 81       	ldd	r19, Y+3	; 0x03
 43a:	2a 81       	ldd	r18, Y+2	; 0x02
 43c:	98 81       	ld	r25, Y
 43e:	89 81       	ldd	r24, Y+1	; 0x01
 440:	1f 92       	push	r1
 442:	3f 93       	push	r19
 444:	1f 92       	push	r1
 446:	2f 93       	push	r18
 448:	1f 92       	push	r1
 44a:	9f 93       	push	r25
 44c:	1f 92       	push	r1
 44e:	8f 93       	push	r24
 450:	1f 93       	push	r17
 452:	0f 93       	push	r16
 454:	0e 94 35 02 	call	0x46a	; 0x46a <printf>
 458:	8d b7       	in	r24, 0x3d	; 61
 45a:	9e b7       	in	r25, 0x3e	; 62
 45c:	0a 96       	adiw	r24, 0x0a	; 10
 45e:	0f b6       	in	r0, 0x3f	; 63
 460:	f8 94       	cli
 462:	9e bf       	out	0x3e, r25	; 62
 464:	0f be       	out	0x3f, r0	; 63
 466:	8d bf       	out	0x3d, r24	; 61
 468:	e7 cf       	rjmp	.-50     	; 0x438 <main+0x30>

0000046a <printf>:
 46a:	a0 e0       	ldi	r26, 0x00	; 0
 46c:	b0 e0       	ldi	r27, 0x00	; 0
 46e:	eb e3       	ldi	r30, 0x3B	; 59
 470:	f2 e0       	ldi	r31, 0x02	; 2
 472:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__prologue_saves__+0x20>
 476:	ae 01       	movw	r20, r28
 478:	4b 5f       	subi	r20, 0xFB	; 251
 47a:	5f 4f       	sbci	r21, 0xFF	; 255
 47c:	fa 01       	movw	r30, r20
 47e:	61 91       	ld	r22, Z+
 480:	71 91       	ld	r23, Z+
 482:	af 01       	movw	r20, r30
 484:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <__iob+0x2>
 488:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <__iob+0x3>
 48c:	0e 94 4b 02 	call	0x496	; 0x496 <vfprintf>
 490:	e2 e0       	ldi	r30, 0x02	; 2
 492:	0c 94 08 05 	jmp	0xa10	; 0xa10 <__epilogue_restores__+0x20>

00000496 <vfprintf>:
 496:	ab e0       	ldi	r26, 0x0B	; 11
 498:	b0 e0       	ldi	r27, 0x00	; 0
 49a:	e1 e5       	ldi	r30, 0x51	; 81
 49c:	f2 e0       	ldi	r31, 0x02	; 2
 49e:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__prologue_saves__>
 4a2:	6c 01       	movw	r12, r24
 4a4:	7b 01       	movw	r14, r22
 4a6:	8a 01       	movw	r16, r20
 4a8:	fc 01       	movw	r30, r24
 4aa:	17 82       	std	Z+7, r1	; 0x07
 4ac:	16 82       	std	Z+6, r1	; 0x06
 4ae:	83 81       	ldd	r24, Z+3	; 0x03
 4b0:	81 ff       	sbrs	r24, 1
 4b2:	cc c1       	rjmp	.+920    	; 0x84c <vfprintf+0x3b6>
 4b4:	ce 01       	movw	r24, r28
 4b6:	01 96       	adiw	r24, 0x01	; 1
 4b8:	3c 01       	movw	r6, r24
 4ba:	f6 01       	movw	r30, r12
 4bc:	93 81       	ldd	r25, Z+3	; 0x03
 4be:	f7 01       	movw	r30, r14
 4c0:	93 fd       	sbrc	r25, 3
 4c2:	85 91       	lpm	r24, Z+
 4c4:	93 ff       	sbrs	r25, 3
 4c6:	81 91       	ld	r24, Z+
 4c8:	7f 01       	movw	r14, r30
 4ca:	88 23       	and	r24, r24
 4cc:	09 f4       	brne	.+2      	; 0x4d0 <vfprintf+0x3a>
 4ce:	ba c1       	rjmp	.+884    	; 0x844 <vfprintf+0x3ae>
 4d0:	85 32       	cpi	r24, 0x25	; 37
 4d2:	39 f4       	brne	.+14     	; 0x4e2 <vfprintf+0x4c>
 4d4:	93 fd       	sbrc	r25, 3
 4d6:	85 91       	lpm	r24, Z+
 4d8:	93 ff       	sbrs	r25, 3
 4da:	81 91       	ld	r24, Z+
 4dc:	7f 01       	movw	r14, r30
 4de:	85 32       	cpi	r24, 0x25	; 37
 4e0:	29 f4       	brne	.+10     	; 0x4ec <vfprintf+0x56>
 4e2:	b6 01       	movw	r22, r12
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 4ea:	e7 cf       	rjmp	.-50     	; 0x4ba <vfprintf+0x24>
 4ec:	91 2c       	mov	r9, r1
 4ee:	21 2c       	mov	r2, r1
 4f0:	31 2c       	mov	r3, r1
 4f2:	ff e1       	ldi	r31, 0x1F	; 31
 4f4:	f3 15       	cp	r31, r3
 4f6:	d8 f0       	brcs	.+54     	; 0x52e <vfprintf+0x98>
 4f8:	8b 32       	cpi	r24, 0x2B	; 43
 4fa:	79 f0       	breq	.+30     	; 0x51a <vfprintf+0x84>
 4fc:	38 f4       	brcc	.+14     	; 0x50c <vfprintf+0x76>
 4fe:	80 32       	cpi	r24, 0x20	; 32
 500:	79 f0       	breq	.+30     	; 0x520 <vfprintf+0x8a>
 502:	83 32       	cpi	r24, 0x23	; 35
 504:	a1 f4       	brne	.+40     	; 0x52e <vfprintf+0x98>
 506:	23 2d       	mov	r18, r3
 508:	20 61       	ori	r18, 0x10	; 16
 50a:	1d c0       	rjmp	.+58     	; 0x546 <vfprintf+0xb0>
 50c:	8d 32       	cpi	r24, 0x2D	; 45
 50e:	61 f0       	breq	.+24     	; 0x528 <vfprintf+0x92>
 510:	80 33       	cpi	r24, 0x30	; 48
 512:	69 f4       	brne	.+26     	; 0x52e <vfprintf+0x98>
 514:	23 2d       	mov	r18, r3
 516:	21 60       	ori	r18, 0x01	; 1
 518:	16 c0       	rjmp	.+44     	; 0x546 <vfprintf+0xb0>
 51a:	83 2d       	mov	r24, r3
 51c:	82 60       	ori	r24, 0x02	; 2
 51e:	38 2e       	mov	r3, r24
 520:	e3 2d       	mov	r30, r3
 522:	e4 60       	ori	r30, 0x04	; 4
 524:	3e 2e       	mov	r3, r30
 526:	2a c0       	rjmp	.+84     	; 0x57c <vfprintf+0xe6>
 528:	f3 2d       	mov	r31, r3
 52a:	f8 60       	ori	r31, 0x08	; 8
 52c:	1d c0       	rjmp	.+58     	; 0x568 <vfprintf+0xd2>
 52e:	37 fc       	sbrc	r3, 7
 530:	2d c0       	rjmp	.+90     	; 0x58c <vfprintf+0xf6>
 532:	20 ed       	ldi	r18, 0xD0	; 208
 534:	28 0f       	add	r18, r24
 536:	2a 30       	cpi	r18, 0x0A	; 10
 538:	40 f0       	brcs	.+16     	; 0x54a <vfprintf+0xb4>
 53a:	8e 32       	cpi	r24, 0x2E	; 46
 53c:	b9 f4       	brne	.+46     	; 0x56c <vfprintf+0xd6>
 53e:	36 fc       	sbrc	r3, 6
 540:	81 c1       	rjmp	.+770    	; 0x844 <vfprintf+0x3ae>
 542:	23 2d       	mov	r18, r3
 544:	20 64       	ori	r18, 0x40	; 64
 546:	32 2e       	mov	r3, r18
 548:	19 c0       	rjmp	.+50     	; 0x57c <vfprintf+0xe6>
 54a:	36 fe       	sbrs	r3, 6
 54c:	06 c0       	rjmp	.+12     	; 0x55a <vfprintf+0xc4>
 54e:	8a e0       	ldi	r24, 0x0A	; 10
 550:	98 9e       	mul	r9, r24
 552:	20 0d       	add	r18, r0
 554:	11 24       	eor	r1, r1
 556:	92 2e       	mov	r9, r18
 558:	11 c0       	rjmp	.+34     	; 0x57c <vfprintf+0xe6>
 55a:	ea e0       	ldi	r30, 0x0A	; 10
 55c:	2e 9e       	mul	r2, r30
 55e:	20 0d       	add	r18, r0
 560:	11 24       	eor	r1, r1
 562:	22 2e       	mov	r2, r18
 564:	f3 2d       	mov	r31, r3
 566:	f0 62       	ori	r31, 0x20	; 32
 568:	3f 2e       	mov	r3, r31
 56a:	08 c0       	rjmp	.+16     	; 0x57c <vfprintf+0xe6>
 56c:	8c 36       	cpi	r24, 0x6C	; 108
 56e:	21 f4       	brne	.+8      	; 0x578 <vfprintf+0xe2>
 570:	83 2d       	mov	r24, r3
 572:	80 68       	ori	r24, 0x80	; 128
 574:	38 2e       	mov	r3, r24
 576:	02 c0       	rjmp	.+4      	; 0x57c <vfprintf+0xe6>
 578:	88 36       	cpi	r24, 0x68	; 104
 57a:	41 f4       	brne	.+16     	; 0x58c <vfprintf+0xf6>
 57c:	f7 01       	movw	r30, r14
 57e:	93 fd       	sbrc	r25, 3
 580:	85 91       	lpm	r24, Z+
 582:	93 ff       	sbrs	r25, 3
 584:	81 91       	ld	r24, Z+
 586:	7f 01       	movw	r14, r30
 588:	81 11       	cpse	r24, r1
 58a:	b3 cf       	rjmp	.-154    	; 0x4f2 <vfprintf+0x5c>
 58c:	98 2f       	mov	r25, r24
 58e:	9f 7d       	andi	r25, 0xDF	; 223
 590:	95 54       	subi	r25, 0x45	; 69
 592:	93 30       	cpi	r25, 0x03	; 3
 594:	28 f4       	brcc	.+10     	; 0x5a0 <vfprintf+0x10a>
 596:	0c 5f       	subi	r16, 0xFC	; 252
 598:	1f 4f       	sbci	r17, 0xFF	; 255
 59a:	9f e3       	ldi	r25, 0x3F	; 63
 59c:	99 83       	std	Y+1, r25	; 0x01
 59e:	0d c0       	rjmp	.+26     	; 0x5ba <vfprintf+0x124>
 5a0:	83 36       	cpi	r24, 0x63	; 99
 5a2:	31 f0       	breq	.+12     	; 0x5b0 <vfprintf+0x11a>
 5a4:	83 37       	cpi	r24, 0x73	; 115
 5a6:	71 f0       	breq	.+28     	; 0x5c4 <vfprintf+0x12e>
 5a8:	83 35       	cpi	r24, 0x53	; 83
 5aa:	09 f0       	breq	.+2      	; 0x5ae <vfprintf+0x118>
 5ac:	59 c0       	rjmp	.+178    	; 0x660 <vfprintf+0x1ca>
 5ae:	21 c0       	rjmp	.+66     	; 0x5f2 <vfprintf+0x15c>
 5b0:	f8 01       	movw	r30, r16
 5b2:	80 81       	ld	r24, Z
 5b4:	89 83       	std	Y+1, r24	; 0x01
 5b6:	0e 5f       	subi	r16, 0xFE	; 254
 5b8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ba:	88 24       	eor	r8, r8
 5bc:	83 94       	inc	r8
 5be:	91 2c       	mov	r9, r1
 5c0:	53 01       	movw	r10, r6
 5c2:	13 c0       	rjmp	.+38     	; 0x5ea <vfprintf+0x154>
 5c4:	28 01       	movw	r4, r16
 5c6:	f2 e0       	ldi	r31, 0x02	; 2
 5c8:	4f 0e       	add	r4, r31
 5ca:	51 1c       	adc	r5, r1
 5cc:	f8 01       	movw	r30, r16
 5ce:	a0 80       	ld	r10, Z
 5d0:	b1 80       	ldd	r11, Z+1	; 0x01
 5d2:	36 fe       	sbrs	r3, 6
 5d4:	03 c0       	rjmp	.+6      	; 0x5dc <vfprintf+0x146>
 5d6:	69 2d       	mov	r22, r9
 5d8:	70 e0       	ldi	r23, 0x00	; 0
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <vfprintf+0x14a>
 5dc:	6f ef       	ldi	r22, 0xFF	; 255
 5de:	7f ef       	ldi	r23, 0xFF	; 255
 5e0:	c5 01       	movw	r24, r10
 5e2:	0e 94 37 04 	call	0x86e	; 0x86e <strnlen>
 5e6:	4c 01       	movw	r8, r24
 5e8:	82 01       	movw	r16, r4
 5ea:	f3 2d       	mov	r31, r3
 5ec:	ff 77       	andi	r31, 0x7F	; 127
 5ee:	3f 2e       	mov	r3, r31
 5f0:	16 c0       	rjmp	.+44     	; 0x61e <vfprintf+0x188>
 5f2:	28 01       	movw	r4, r16
 5f4:	22 e0       	ldi	r18, 0x02	; 2
 5f6:	42 0e       	add	r4, r18
 5f8:	51 1c       	adc	r5, r1
 5fa:	f8 01       	movw	r30, r16
 5fc:	a0 80       	ld	r10, Z
 5fe:	b1 80       	ldd	r11, Z+1	; 0x01
 600:	36 fe       	sbrs	r3, 6
 602:	03 c0       	rjmp	.+6      	; 0x60a <vfprintf+0x174>
 604:	69 2d       	mov	r22, r9
 606:	70 e0       	ldi	r23, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <vfprintf+0x178>
 60a:	6f ef       	ldi	r22, 0xFF	; 255
 60c:	7f ef       	ldi	r23, 0xFF	; 255
 60e:	c5 01       	movw	r24, r10
 610:	0e 94 2c 04 	call	0x858	; 0x858 <strnlen_P>
 614:	4c 01       	movw	r8, r24
 616:	f3 2d       	mov	r31, r3
 618:	f0 68       	ori	r31, 0x80	; 128
 61a:	3f 2e       	mov	r3, r31
 61c:	82 01       	movw	r16, r4
 61e:	33 fc       	sbrc	r3, 3
 620:	1b c0       	rjmp	.+54     	; 0x658 <vfprintf+0x1c2>
 622:	82 2d       	mov	r24, r2
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	88 16       	cp	r8, r24
 628:	99 06       	cpc	r9, r25
 62a:	b0 f4       	brcc	.+44     	; 0x658 <vfprintf+0x1c2>
 62c:	b6 01       	movw	r22, r12
 62e:	80 e2       	ldi	r24, 0x20	; 32
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 636:	2a 94       	dec	r2
 638:	f4 cf       	rjmp	.-24     	; 0x622 <vfprintf+0x18c>
 63a:	f5 01       	movw	r30, r10
 63c:	37 fc       	sbrc	r3, 7
 63e:	85 91       	lpm	r24, Z+
 640:	37 fe       	sbrs	r3, 7
 642:	81 91       	ld	r24, Z+
 644:	5f 01       	movw	r10, r30
 646:	b6 01       	movw	r22, r12
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 64e:	21 10       	cpse	r2, r1
 650:	2a 94       	dec	r2
 652:	21 e0       	ldi	r18, 0x01	; 1
 654:	82 1a       	sub	r8, r18
 656:	91 08       	sbc	r9, r1
 658:	81 14       	cp	r8, r1
 65a:	91 04       	cpc	r9, r1
 65c:	71 f7       	brne	.-36     	; 0x63a <vfprintf+0x1a4>
 65e:	e8 c0       	rjmp	.+464    	; 0x830 <vfprintf+0x39a>
 660:	84 36       	cpi	r24, 0x64	; 100
 662:	11 f0       	breq	.+4      	; 0x668 <vfprintf+0x1d2>
 664:	89 36       	cpi	r24, 0x69	; 105
 666:	41 f5       	brne	.+80     	; 0x6b8 <vfprintf+0x222>
 668:	f8 01       	movw	r30, r16
 66a:	37 fe       	sbrs	r3, 7
 66c:	07 c0       	rjmp	.+14     	; 0x67c <vfprintf+0x1e6>
 66e:	60 81       	ld	r22, Z
 670:	71 81       	ldd	r23, Z+1	; 0x01
 672:	82 81       	ldd	r24, Z+2	; 0x02
 674:	93 81       	ldd	r25, Z+3	; 0x03
 676:	0c 5f       	subi	r16, 0xFC	; 252
 678:	1f 4f       	sbci	r17, 0xFF	; 255
 67a:	08 c0       	rjmp	.+16     	; 0x68c <vfprintf+0x1f6>
 67c:	60 81       	ld	r22, Z
 67e:	71 81       	ldd	r23, Z+1	; 0x01
 680:	07 2e       	mov	r0, r23
 682:	00 0c       	add	r0, r0
 684:	88 0b       	sbc	r24, r24
 686:	99 0b       	sbc	r25, r25
 688:	0e 5f       	subi	r16, 0xFE	; 254
 68a:	1f 4f       	sbci	r17, 0xFF	; 255
 68c:	f3 2d       	mov	r31, r3
 68e:	ff 76       	andi	r31, 0x6F	; 111
 690:	3f 2e       	mov	r3, r31
 692:	97 ff       	sbrs	r25, 7
 694:	09 c0       	rjmp	.+18     	; 0x6a8 <vfprintf+0x212>
 696:	90 95       	com	r25
 698:	80 95       	com	r24
 69a:	70 95       	com	r23
 69c:	61 95       	neg	r22
 69e:	7f 4f       	sbci	r23, 0xFF	; 255
 6a0:	8f 4f       	sbci	r24, 0xFF	; 255
 6a2:	9f 4f       	sbci	r25, 0xFF	; 255
 6a4:	f0 68       	ori	r31, 0x80	; 128
 6a6:	3f 2e       	mov	r3, r31
 6a8:	2a e0       	ldi	r18, 0x0A	; 10
 6aa:	30 e0       	ldi	r19, 0x00	; 0
 6ac:	a3 01       	movw	r20, r6
 6ae:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__ultoa_invert>
 6b2:	88 2e       	mov	r8, r24
 6b4:	86 18       	sub	r8, r6
 6b6:	45 c0       	rjmp	.+138    	; 0x742 <vfprintf+0x2ac>
 6b8:	85 37       	cpi	r24, 0x75	; 117
 6ba:	31 f4       	brne	.+12     	; 0x6c8 <vfprintf+0x232>
 6bc:	23 2d       	mov	r18, r3
 6be:	2f 7e       	andi	r18, 0xEF	; 239
 6c0:	b2 2e       	mov	r11, r18
 6c2:	2a e0       	ldi	r18, 0x0A	; 10
 6c4:	30 e0       	ldi	r19, 0x00	; 0
 6c6:	25 c0       	rjmp	.+74     	; 0x712 <vfprintf+0x27c>
 6c8:	93 2d       	mov	r25, r3
 6ca:	99 7f       	andi	r25, 0xF9	; 249
 6cc:	b9 2e       	mov	r11, r25
 6ce:	8f 36       	cpi	r24, 0x6F	; 111
 6d0:	c1 f0       	breq	.+48     	; 0x702 <vfprintf+0x26c>
 6d2:	18 f4       	brcc	.+6      	; 0x6da <vfprintf+0x244>
 6d4:	88 35       	cpi	r24, 0x58	; 88
 6d6:	79 f0       	breq	.+30     	; 0x6f6 <vfprintf+0x260>
 6d8:	b5 c0       	rjmp	.+362    	; 0x844 <vfprintf+0x3ae>
 6da:	80 37       	cpi	r24, 0x70	; 112
 6dc:	19 f0       	breq	.+6      	; 0x6e4 <vfprintf+0x24e>
 6de:	88 37       	cpi	r24, 0x78	; 120
 6e0:	21 f0       	breq	.+8      	; 0x6ea <vfprintf+0x254>
 6e2:	b0 c0       	rjmp	.+352    	; 0x844 <vfprintf+0x3ae>
 6e4:	e9 2f       	mov	r30, r25
 6e6:	e0 61       	ori	r30, 0x10	; 16
 6e8:	be 2e       	mov	r11, r30
 6ea:	b4 fe       	sbrs	r11, 4
 6ec:	0d c0       	rjmp	.+26     	; 0x708 <vfprintf+0x272>
 6ee:	fb 2d       	mov	r31, r11
 6f0:	f4 60       	ori	r31, 0x04	; 4
 6f2:	bf 2e       	mov	r11, r31
 6f4:	09 c0       	rjmp	.+18     	; 0x708 <vfprintf+0x272>
 6f6:	34 fe       	sbrs	r3, 4
 6f8:	0a c0       	rjmp	.+20     	; 0x70e <vfprintf+0x278>
 6fa:	29 2f       	mov	r18, r25
 6fc:	26 60       	ori	r18, 0x06	; 6
 6fe:	b2 2e       	mov	r11, r18
 700:	06 c0       	rjmp	.+12     	; 0x70e <vfprintf+0x278>
 702:	28 e0       	ldi	r18, 0x08	; 8
 704:	30 e0       	ldi	r19, 0x00	; 0
 706:	05 c0       	rjmp	.+10     	; 0x712 <vfprintf+0x27c>
 708:	20 e1       	ldi	r18, 0x10	; 16
 70a:	30 e0       	ldi	r19, 0x00	; 0
 70c:	02 c0       	rjmp	.+4      	; 0x712 <vfprintf+0x27c>
 70e:	20 e1       	ldi	r18, 0x10	; 16
 710:	32 e0       	ldi	r19, 0x02	; 2
 712:	f8 01       	movw	r30, r16
 714:	b7 fe       	sbrs	r11, 7
 716:	07 c0       	rjmp	.+14     	; 0x726 <vfprintf+0x290>
 718:	60 81       	ld	r22, Z
 71a:	71 81       	ldd	r23, Z+1	; 0x01
 71c:	82 81       	ldd	r24, Z+2	; 0x02
 71e:	93 81       	ldd	r25, Z+3	; 0x03
 720:	0c 5f       	subi	r16, 0xFC	; 252
 722:	1f 4f       	sbci	r17, 0xFF	; 255
 724:	06 c0       	rjmp	.+12     	; 0x732 <vfprintf+0x29c>
 726:	60 81       	ld	r22, Z
 728:	71 81       	ldd	r23, Z+1	; 0x01
 72a:	80 e0       	ldi	r24, 0x00	; 0
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	0e 5f       	subi	r16, 0xFE	; 254
 730:	1f 4f       	sbci	r17, 0xFF	; 255
 732:	a3 01       	movw	r20, r6
 734:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__ultoa_invert>
 738:	88 2e       	mov	r8, r24
 73a:	86 18       	sub	r8, r6
 73c:	fb 2d       	mov	r31, r11
 73e:	ff 77       	andi	r31, 0x7F	; 127
 740:	3f 2e       	mov	r3, r31
 742:	36 fe       	sbrs	r3, 6
 744:	0d c0       	rjmp	.+26     	; 0x760 <vfprintf+0x2ca>
 746:	23 2d       	mov	r18, r3
 748:	2e 7f       	andi	r18, 0xFE	; 254
 74a:	a2 2e       	mov	r10, r18
 74c:	89 14       	cp	r8, r9
 74e:	58 f4       	brcc	.+22     	; 0x766 <vfprintf+0x2d0>
 750:	34 fe       	sbrs	r3, 4
 752:	0b c0       	rjmp	.+22     	; 0x76a <vfprintf+0x2d4>
 754:	32 fc       	sbrc	r3, 2
 756:	09 c0       	rjmp	.+18     	; 0x76a <vfprintf+0x2d4>
 758:	83 2d       	mov	r24, r3
 75a:	8e 7e       	andi	r24, 0xEE	; 238
 75c:	a8 2e       	mov	r10, r24
 75e:	05 c0       	rjmp	.+10     	; 0x76a <vfprintf+0x2d4>
 760:	b8 2c       	mov	r11, r8
 762:	a3 2c       	mov	r10, r3
 764:	03 c0       	rjmp	.+6      	; 0x76c <vfprintf+0x2d6>
 766:	b8 2c       	mov	r11, r8
 768:	01 c0       	rjmp	.+2      	; 0x76c <vfprintf+0x2d6>
 76a:	b9 2c       	mov	r11, r9
 76c:	a4 fe       	sbrs	r10, 4
 76e:	0f c0       	rjmp	.+30     	; 0x78e <vfprintf+0x2f8>
 770:	fe 01       	movw	r30, r28
 772:	e8 0d       	add	r30, r8
 774:	f1 1d       	adc	r31, r1
 776:	80 81       	ld	r24, Z
 778:	80 33       	cpi	r24, 0x30	; 48
 77a:	21 f4       	brne	.+8      	; 0x784 <vfprintf+0x2ee>
 77c:	9a 2d       	mov	r25, r10
 77e:	99 7e       	andi	r25, 0xE9	; 233
 780:	a9 2e       	mov	r10, r25
 782:	09 c0       	rjmp	.+18     	; 0x796 <vfprintf+0x300>
 784:	a2 fe       	sbrs	r10, 2
 786:	06 c0       	rjmp	.+12     	; 0x794 <vfprintf+0x2fe>
 788:	b3 94       	inc	r11
 78a:	b3 94       	inc	r11
 78c:	04 c0       	rjmp	.+8      	; 0x796 <vfprintf+0x300>
 78e:	8a 2d       	mov	r24, r10
 790:	86 78       	andi	r24, 0x86	; 134
 792:	09 f0       	breq	.+2      	; 0x796 <vfprintf+0x300>
 794:	b3 94       	inc	r11
 796:	a3 fc       	sbrc	r10, 3
 798:	11 c0       	rjmp	.+34     	; 0x7bc <vfprintf+0x326>
 79a:	a0 fe       	sbrs	r10, 0
 79c:	06 c0       	rjmp	.+12     	; 0x7aa <vfprintf+0x314>
 79e:	b2 14       	cp	r11, r2
 7a0:	88 f4       	brcc	.+34     	; 0x7c4 <vfprintf+0x32e>
 7a2:	28 0c       	add	r2, r8
 7a4:	92 2c       	mov	r9, r2
 7a6:	9b 18       	sub	r9, r11
 7a8:	0e c0       	rjmp	.+28     	; 0x7c6 <vfprintf+0x330>
 7aa:	b2 14       	cp	r11, r2
 7ac:	60 f4       	brcc	.+24     	; 0x7c6 <vfprintf+0x330>
 7ae:	b6 01       	movw	r22, r12
 7b0:	80 e2       	ldi	r24, 0x20	; 32
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 7b8:	b3 94       	inc	r11
 7ba:	f7 cf       	rjmp	.-18     	; 0x7aa <vfprintf+0x314>
 7bc:	b2 14       	cp	r11, r2
 7be:	18 f4       	brcc	.+6      	; 0x7c6 <vfprintf+0x330>
 7c0:	2b 18       	sub	r2, r11
 7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <vfprintf+0x332>
 7c4:	98 2c       	mov	r9, r8
 7c6:	21 2c       	mov	r2, r1
 7c8:	a4 fe       	sbrs	r10, 4
 7ca:	10 c0       	rjmp	.+32     	; 0x7ec <vfprintf+0x356>
 7cc:	b6 01       	movw	r22, r12
 7ce:	80 e3       	ldi	r24, 0x30	; 48
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 7d6:	a2 fe       	sbrs	r10, 2
 7d8:	17 c0       	rjmp	.+46     	; 0x808 <vfprintf+0x372>
 7da:	a1 fc       	sbrc	r10, 1
 7dc:	03 c0       	rjmp	.+6      	; 0x7e4 <vfprintf+0x34e>
 7de:	88 e7       	ldi	r24, 0x78	; 120
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	02 c0       	rjmp	.+4      	; 0x7e8 <vfprintf+0x352>
 7e4:	88 e5       	ldi	r24, 0x58	; 88
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	b6 01       	movw	r22, r12
 7ea:	0c c0       	rjmp	.+24     	; 0x804 <vfprintf+0x36e>
 7ec:	8a 2d       	mov	r24, r10
 7ee:	86 78       	andi	r24, 0x86	; 134
 7f0:	59 f0       	breq	.+22     	; 0x808 <vfprintf+0x372>
 7f2:	a1 fe       	sbrs	r10, 1
 7f4:	02 c0       	rjmp	.+4      	; 0x7fa <vfprintf+0x364>
 7f6:	8b e2       	ldi	r24, 0x2B	; 43
 7f8:	01 c0       	rjmp	.+2      	; 0x7fc <vfprintf+0x366>
 7fa:	80 e2       	ldi	r24, 0x20	; 32
 7fc:	a7 fc       	sbrc	r10, 7
 7fe:	8d e2       	ldi	r24, 0x2D	; 45
 800:	b6 01       	movw	r22, r12
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 808:	89 14       	cp	r8, r9
 80a:	38 f4       	brcc	.+14     	; 0x81a <vfprintf+0x384>
 80c:	b6 01       	movw	r22, r12
 80e:	80 e3       	ldi	r24, 0x30	; 48
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 816:	9a 94       	dec	r9
 818:	f7 cf       	rjmp	.-18     	; 0x808 <vfprintf+0x372>
 81a:	8a 94       	dec	r8
 81c:	f3 01       	movw	r30, r6
 81e:	e8 0d       	add	r30, r8
 820:	f1 1d       	adc	r31, r1
 822:	80 81       	ld	r24, Z
 824:	b6 01       	movw	r22, r12
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 82c:	81 10       	cpse	r8, r1
 82e:	f5 cf       	rjmp	.-22     	; 0x81a <vfprintf+0x384>
 830:	22 20       	and	r2, r2
 832:	09 f4       	brne	.+2      	; 0x836 <vfprintf+0x3a0>
 834:	42 ce       	rjmp	.-892    	; 0x4ba <vfprintf+0x24>
 836:	b6 01       	movw	r22, r12
 838:	80 e2       	ldi	r24, 0x20	; 32
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	0e 94 42 04 	call	0x884	; 0x884 <fputc>
 840:	2a 94       	dec	r2
 842:	f6 cf       	rjmp	.-20     	; 0x830 <vfprintf+0x39a>
 844:	f6 01       	movw	r30, r12
 846:	86 81       	ldd	r24, Z+6	; 0x06
 848:	97 81       	ldd	r25, Z+7	; 0x07
 84a:	02 c0       	rjmp	.+4      	; 0x850 <vfprintf+0x3ba>
 84c:	8f ef       	ldi	r24, 0xFF	; 255
 84e:	9f ef       	ldi	r25, 0xFF	; 255
 850:	2b 96       	adiw	r28, 0x0b	; 11
 852:	e2 e1       	ldi	r30, 0x12	; 18
 854:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__epilogue_restores__>

00000858 <strnlen_P>:
 858:	fc 01       	movw	r30, r24
 85a:	05 90       	lpm	r0, Z+
 85c:	61 50       	subi	r22, 0x01	; 1
 85e:	70 40       	sbci	r23, 0x00	; 0
 860:	01 10       	cpse	r0, r1
 862:	d8 f7       	brcc	.-10     	; 0x85a <strnlen_P+0x2>
 864:	80 95       	com	r24
 866:	90 95       	com	r25
 868:	8e 0f       	add	r24, r30
 86a:	9f 1f       	adc	r25, r31
 86c:	08 95       	ret

0000086e <strnlen>:
 86e:	fc 01       	movw	r30, r24
 870:	61 50       	subi	r22, 0x01	; 1
 872:	70 40       	sbci	r23, 0x00	; 0
 874:	01 90       	ld	r0, Z+
 876:	01 10       	cpse	r0, r1
 878:	d8 f7       	brcc	.-10     	; 0x870 <strnlen+0x2>
 87a:	80 95       	com	r24
 87c:	90 95       	com	r25
 87e:	8e 0f       	add	r24, r30
 880:	9f 1f       	adc	r25, r31
 882:	08 95       	ret

00000884 <fputc>:
 884:	0f 93       	push	r16
 886:	1f 93       	push	r17
 888:	cf 93       	push	r28
 88a:	df 93       	push	r29
 88c:	fb 01       	movw	r30, r22
 88e:	23 81       	ldd	r18, Z+3	; 0x03
 890:	21 fd       	sbrc	r18, 1
 892:	03 c0       	rjmp	.+6      	; 0x89a <fputc+0x16>
 894:	8f ef       	ldi	r24, 0xFF	; 255
 896:	9f ef       	ldi	r25, 0xFF	; 255
 898:	2c c0       	rjmp	.+88     	; 0x8f2 <fputc+0x6e>
 89a:	22 ff       	sbrs	r18, 2
 89c:	16 c0       	rjmp	.+44     	; 0x8ca <fputc+0x46>
 89e:	46 81       	ldd	r20, Z+6	; 0x06
 8a0:	57 81       	ldd	r21, Z+7	; 0x07
 8a2:	24 81       	ldd	r18, Z+4	; 0x04
 8a4:	35 81       	ldd	r19, Z+5	; 0x05
 8a6:	42 17       	cp	r20, r18
 8a8:	53 07       	cpc	r21, r19
 8aa:	44 f4       	brge	.+16     	; 0x8bc <fputc+0x38>
 8ac:	a0 81       	ld	r26, Z
 8ae:	b1 81       	ldd	r27, Z+1	; 0x01
 8b0:	9d 01       	movw	r18, r26
 8b2:	2f 5f       	subi	r18, 0xFF	; 255
 8b4:	3f 4f       	sbci	r19, 0xFF	; 255
 8b6:	31 83       	std	Z+1, r19	; 0x01
 8b8:	20 83       	st	Z, r18
 8ba:	8c 93       	st	X, r24
 8bc:	26 81       	ldd	r18, Z+6	; 0x06
 8be:	37 81       	ldd	r19, Z+7	; 0x07
 8c0:	2f 5f       	subi	r18, 0xFF	; 255
 8c2:	3f 4f       	sbci	r19, 0xFF	; 255
 8c4:	37 83       	std	Z+7, r19	; 0x07
 8c6:	26 83       	std	Z+6, r18	; 0x06
 8c8:	14 c0       	rjmp	.+40     	; 0x8f2 <fputc+0x6e>
 8ca:	8b 01       	movw	r16, r22
 8cc:	ec 01       	movw	r28, r24
 8ce:	fb 01       	movw	r30, r22
 8d0:	00 84       	ldd	r0, Z+8	; 0x08
 8d2:	f1 85       	ldd	r31, Z+9	; 0x09
 8d4:	e0 2d       	mov	r30, r0
 8d6:	09 95       	icall
 8d8:	89 2b       	or	r24, r25
 8da:	e1 f6       	brne	.-72     	; 0x894 <fputc+0x10>
 8dc:	d8 01       	movw	r26, r16
 8de:	16 96       	adiw	r26, 0x06	; 6
 8e0:	8d 91       	ld	r24, X+
 8e2:	9c 91       	ld	r25, X
 8e4:	17 97       	sbiw	r26, 0x07	; 7
 8e6:	01 96       	adiw	r24, 0x01	; 1
 8e8:	17 96       	adiw	r26, 0x07	; 7
 8ea:	9c 93       	st	X, r25
 8ec:	8e 93       	st	-X, r24
 8ee:	16 97       	sbiw	r26, 0x06	; 6
 8f0:	ce 01       	movw	r24, r28
 8f2:	df 91       	pop	r29
 8f4:	cf 91       	pop	r28
 8f6:	1f 91       	pop	r17
 8f8:	0f 91       	pop	r16
 8fa:	08 95       	ret

000008fc <__ultoa_invert>:
 8fc:	fa 01       	movw	r30, r20
 8fe:	aa 27       	eor	r26, r26
 900:	28 30       	cpi	r18, 0x08	; 8
 902:	51 f1       	breq	.+84     	; 0x958 <__stack+0x59>
 904:	20 31       	cpi	r18, 0x10	; 16
 906:	81 f1       	breq	.+96     	; 0x968 <__stack+0x69>
 908:	e8 94       	clt
 90a:	6f 93       	push	r22
 90c:	6e 7f       	andi	r22, 0xFE	; 254
 90e:	6e 5f       	subi	r22, 0xFE	; 254
 910:	7f 4f       	sbci	r23, 0xFF	; 255
 912:	8f 4f       	sbci	r24, 0xFF	; 255
 914:	9f 4f       	sbci	r25, 0xFF	; 255
 916:	af 4f       	sbci	r26, 0xFF	; 255
 918:	b1 e0       	ldi	r27, 0x01	; 1
 91a:	3e d0       	rcall	.+124    	; 0x998 <__stack+0x99>
 91c:	b4 e0       	ldi	r27, 0x04	; 4
 91e:	3c d0       	rcall	.+120    	; 0x998 <__stack+0x99>
 920:	67 0f       	add	r22, r23
 922:	78 1f       	adc	r23, r24
 924:	89 1f       	adc	r24, r25
 926:	9a 1f       	adc	r25, r26
 928:	a1 1d       	adc	r26, r1
 92a:	68 0f       	add	r22, r24
 92c:	79 1f       	adc	r23, r25
 92e:	8a 1f       	adc	r24, r26
 930:	91 1d       	adc	r25, r1
 932:	a1 1d       	adc	r26, r1
 934:	6a 0f       	add	r22, r26
 936:	71 1d       	adc	r23, r1
 938:	81 1d       	adc	r24, r1
 93a:	91 1d       	adc	r25, r1
 93c:	a1 1d       	adc	r26, r1
 93e:	20 d0       	rcall	.+64     	; 0x980 <__stack+0x81>
 940:	09 f4       	brne	.+2      	; 0x944 <__stack+0x45>
 942:	68 94       	set
 944:	3f 91       	pop	r19
 946:	2a e0       	ldi	r18, 0x0A	; 10
 948:	26 9f       	mul	r18, r22
 94a:	11 24       	eor	r1, r1
 94c:	30 19       	sub	r19, r0
 94e:	30 5d       	subi	r19, 0xD0	; 208
 950:	31 93       	st	Z+, r19
 952:	de f6       	brtc	.-74     	; 0x90a <__stack+0xb>
 954:	cf 01       	movw	r24, r30
 956:	08 95       	ret
 958:	46 2f       	mov	r20, r22
 95a:	47 70       	andi	r20, 0x07	; 7
 95c:	40 5d       	subi	r20, 0xD0	; 208
 95e:	41 93       	st	Z+, r20
 960:	b3 e0       	ldi	r27, 0x03	; 3
 962:	0f d0       	rcall	.+30     	; 0x982 <__stack+0x83>
 964:	c9 f7       	brne	.-14     	; 0x958 <__stack+0x59>
 966:	f6 cf       	rjmp	.-20     	; 0x954 <__stack+0x55>
 968:	46 2f       	mov	r20, r22
 96a:	4f 70       	andi	r20, 0x0F	; 15
 96c:	40 5d       	subi	r20, 0xD0	; 208
 96e:	4a 33       	cpi	r20, 0x3A	; 58
 970:	18 f0       	brcs	.+6      	; 0x978 <__stack+0x79>
 972:	49 5d       	subi	r20, 0xD9	; 217
 974:	31 fd       	sbrc	r19, 1
 976:	40 52       	subi	r20, 0x20	; 32
 978:	41 93       	st	Z+, r20
 97a:	02 d0       	rcall	.+4      	; 0x980 <__stack+0x81>
 97c:	a9 f7       	brne	.-22     	; 0x968 <__stack+0x69>
 97e:	ea cf       	rjmp	.-44     	; 0x954 <__stack+0x55>
 980:	b4 e0       	ldi	r27, 0x04	; 4
 982:	a6 95       	lsr	r26
 984:	97 95       	ror	r25
 986:	87 95       	ror	r24
 988:	77 95       	ror	r23
 98a:	67 95       	ror	r22
 98c:	ba 95       	dec	r27
 98e:	c9 f7       	brne	.-14     	; 0x982 <__stack+0x83>
 990:	00 97       	sbiw	r24, 0x00	; 0
 992:	61 05       	cpc	r22, r1
 994:	71 05       	cpc	r23, r1
 996:	08 95       	ret
 998:	9b 01       	movw	r18, r22
 99a:	ac 01       	movw	r20, r24
 99c:	0a 2e       	mov	r0, r26
 99e:	06 94       	lsr	r0
 9a0:	57 95       	ror	r21
 9a2:	47 95       	ror	r20
 9a4:	37 95       	ror	r19
 9a6:	27 95       	ror	r18
 9a8:	ba 95       	dec	r27
 9aa:	c9 f7       	brne	.-14     	; 0x99e <__stack+0x9f>
 9ac:	62 0f       	add	r22, r18
 9ae:	73 1f       	adc	r23, r19
 9b0:	84 1f       	adc	r24, r20
 9b2:	95 1f       	adc	r25, r21
 9b4:	a0 1d       	adc	r26, r0
 9b6:	08 95       	ret

000009b8 <__prologue_saves__>:
 9b8:	2f 92       	push	r2
 9ba:	3f 92       	push	r3
 9bc:	4f 92       	push	r4
 9be:	5f 92       	push	r5
 9c0:	6f 92       	push	r6
 9c2:	7f 92       	push	r7
 9c4:	8f 92       	push	r8
 9c6:	9f 92       	push	r9
 9c8:	af 92       	push	r10
 9ca:	bf 92       	push	r11
 9cc:	cf 92       	push	r12
 9ce:	df 92       	push	r13
 9d0:	ef 92       	push	r14
 9d2:	ff 92       	push	r15
 9d4:	0f 93       	push	r16
 9d6:	1f 93       	push	r17
 9d8:	cf 93       	push	r28
 9da:	df 93       	push	r29
 9dc:	cd b7       	in	r28, 0x3d	; 61
 9de:	de b7       	in	r29, 0x3e	; 62
 9e0:	ca 1b       	sub	r28, r26
 9e2:	db 0b       	sbc	r29, r27
 9e4:	0f b6       	in	r0, 0x3f	; 63
 9e6:	f8 94       	cli
 9e8:	de bf       	out	0x3e, r29	; 62
 9ea:	0f be       	out	0x3f, r0	; 63
 9ec:	cd bf       	out	0x3d, r28	; 61
 9ee:	09 94       	ijmp

000009f0 <__epilogue_restores__>:
 9f0:	2a 88       	ldd	r2, Y+18	; 0x12
 9f2:	39 88       	ldd	r3, Y+17	; 0x11
 9f4:	48 88       	ldd	r4, Y+16	; 0x10
 9f6:	5f 84       	ldd	r5, Y+15	; 0x0f
 9f8:	6e 84       	ldd	r6, Y+14	; 0x0e
 9fa:	7d 84       	ldd	r7, Y+13	; 0x0d
 9fc:	8c 84       	ldd	r8, Y+12	; 0x0c
 9fe:	9b 84       	ldd	r9, Y+11	; 0x0b
 a00:	aa 84       	ldd	r10, Y+10	; 0x0a
 a02:	b9 84       	ldd	r11, Y+9	; 0x09
 a04:	c8 84       	ldd	r12, Y+8	; 0x08
 a06:	df 80       	ldd	r13, Y+7	; 0x07
 a08:	ee 80       	ldd	r14, Y+6	; 0x06
 a0a:	fd 80       	ldd	r15, Y+5	; 0x05
 a0c:	0c 81       	ldd	r16, Y+4	; 0x04
 a0e:	1b 81       	ldd	r17, Y+3	; 0x03
 a10:	aa 81       	ldd	r26, Y+2	; 0x02
 a12:	b9 81       	ldd	r27, Y+1	; 0x01
 a14:	ce 0f       	add	r28, r30
 a16:	d1 1d       	adc	r29, r1
 a18:	0f b6       	in	r0, 0x3f	; 63
 a1a:	f8 94       	cli
 a1c:	de bf       	out	0x3e, r29	; 62
 a1e:	0f be       	out	0x3f, r0	; 63
 a20:	cd bf       	out	0x3d, r28	; 61
 a22:	ed 01       	movw	r28, r26
 a24:	08 95       	ret

00000a26 <_exit>:
 a26:	f8 94       	cli

00000a28 <__stop_program>:
 a28:	ff cf       	rjmp	.-2      	; 0xa28 <__stop_program>
